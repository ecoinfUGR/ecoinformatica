---
title: "Ejercicio de bases de datos"
author: 
  - name: "María Suárez Muñoz"
    orcid: 0000-0003-1765-6885
    email: bv2sumum@uco.es
    affiliation: Departamento de Ingeniería Forestal, Universidad de Córdoba
date: 2025-02-03
sesion: 2
format: 
  revealjs:
    auto-stretch: false 
    logo: "images/logo-ugr.png"
    footer: Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad
    theme: [default, "../../custom_theme.scss"] 
    transition: fade
    background-transition: fade
    highlight-style: a11y
code-link: true
crossref:
  fig-title: Figura     # (default is "Figure")
  tbl-title: Tabla     # (default is "Table")
  title-delim: .     # (default is ":")
  fig-prefix: Figura
  tbl-prefix: Tabla
  ref-hyperlink: true
  sec-prefix: ""
  sec-labels: alpha
---

# Introducción {.unnumbered}

- En este ejercicio aprenderemos a trabajar con bases de datos desde `R`.

- Vamos a trabajar con [R](https://www.r-project.org/), Rstudio (ahora llamado [posit](https://posit.co/)), y utilizaremos al menos los paquete [`RSQLite`](https://rsqlite.r-dbi.org/) y [`dplyr`](https://dplyr.tidyverse.org/).

# Flujo de Trabajo

1. Instalar y cargar paquetes
2. Crear conexión con base de datos
3. Montar base de datos
4. Realizar consultas
5. Cerrar base de datos

## Instalar y cargar paquetes

```{r setup, echo = FALSE, eval = FALSE}
# install.packages("RSQLite")
library(RSQLite)
# install.packages("dplyr")
library(dplyr)
```

## Crear conexión con base de datos
```{r, echo = FALSE, eval = FALSE}
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
```

## Montar base de datos
```{r, eval = FALSE}
path <- "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/ecoinformatica_web/sesiones/bbdd/"
parcelas <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCParcelas.txt"), sep = ";", header = TRUE)
mayores <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMayores.txt"), sep = ";", header = TRUE)
matorral <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMatorral.txt"), sep = ";", header = TRUE)
regenera <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCRegenera.txt"), sep = ";", header = TRUE)
arboles <- read.table(paste0(path, "material/especies_ANEXO12.txt"), sep = ";", header = TRUE)
arbustos <- read.table(paste0(path, "material/especies_ANEXO13.txt"), sep = ";", header = TRUE)

dbWriteTable(con, "parcelas", parcelas)
dbWriteTable(con, "mayores", mayores)
dbWriteTable(con, "matorral", matorral)
dbWriteTable(con, "regenera", regenera)
dbWriteTable(con, "arboles", arboles)
dbWriteTable(con, "arbustos", arbustos)

dbListTables(con)
dbListFields(con, "parcelas")
dbReadTable(con, "parcelas")
```

## Realizar consultas

Podemos realizar consultas sencillas con SQL. Por ejemplo, quiero extraer el diámetro de todas las encinas muestreadas, y el estadillo al que pertenecen.
```{r, eval = FALSE}
query_1 <- dbSendQuery(con, "SELECT Estadillo, Especie, Dn1
                             FROM mayores
                             WHERE Dn1 > 84")
df_q1 <- dbFetch(query_1)
dbClearResult(query_1)
```

O quiero conocer cuál es el diámetro medio de los pinos carrasco. 
```{r, eval = FALSE}
query_2 <- dbSendQuery(con, "SELECT Estadillo, (Dn1 + Dn2/2) AS Dn_avg
                             FROM mayores
                             WHERE Especie = 24;")
df_q2 <- dbFetch(query_2)
```

Y consultas más complejas. Por ejemplo, quiero conocer cuáles son las especies acompañantes a las encinas adultas en cada parcela...

## Realizar consultas sin usar lenguaje SQL

Aunque la lógica del SQL sigue aplicando, existen otras formas de tratar nuestros datos como bases de datos, con paquetes que resultan mucho más amigables...

Por ejemplo, si de nuevo quiero conocer cuáles son las especies acompañantes a las encinas adultas en cada parcela...
 
```{r, eval = FALSE}
acompanantes <- mayores %>%
  left_join(arboles, by = c("Especie" = "Codigo")) %>%
  filter(Especie.y == "Quercus ilex") %>%
  select(Estadillo, Cla, Subclase) %>%
  distinct() %>%
  left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase")) %>%
  select(-Fcc, -Hm) %>%
  left_join(arbustos, by = c("Especie" = "Codigo")) %>%
  rename(Codigo = Especie, Especie = Especie.y)
```

## Cerrar base de datos

```{r, eval = FALSE}
dbDisconnect(con)
```
