{
  "hash": "7c4e8f04b393bae641bac0a618d1f411",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducción a los SIG en R\" \nauthor: \n  - name: \"Antonio J. Pérez-Luque\"\n    orcid: 0000-0002-1747-0469\n    email: antonio.perez@inia.csic.es\n    affiliation: Instituto de Ciencias Forestales (CIFOR) | INIA-CSIC (Madrid)\ndate: 2025-02-07\nsesion: 5\nformat: \n  revealjs:\n    auto-stretch: false \n    logo: \"../../assets/images/logo-ugr.png\"\n    footer: Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad\n    theme: [default, \"../../custom_theme.scss\"] \n    transition: fade\n    background-transition: fade\n    highlight-style: a11y\n    code-block-background: true\n    code-link: true\ncrossref:\n  fig-title: Figura     # (default is \"Figure\")\n  tbl-title: Tabla     # (default is \"Table\")\n  title-delim: .     # (default is \":\")\n  fig-prefix: Figura\n  tbl-prefix: Tabla\n  ref-hyperlink: true\n  sec-prefix: \"\"\n  sec-labels: alpha\nexecute:\n  echo: true     \n  eval: true     \n  output: true   \n  include: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Introducción\n\n::: small\n- Paquetes a usar \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf) # +++\nlibrary(terra) # +++\nlibrary(raster) # +\nlibrary(stars) # ++\nlibrary(ggspatial)\nlibrary(maps)\n\nlibrary(tidyverse)\nlibrary(here)\n```\n:::\n\n\n \n\n- Material en este [**enlace**](../../assets/ext_data/mat_sig.zip)\n\n:::\n\n# Tipos de Datos Espaciales\n\n## Datos Vectoriales \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/intro-vector-data-r)](images/i_vectorial.png){fig-align=\"center\" width=60%}\n\n--- \n\n## [The big 7](https://r-spatial.org/book/03-Geometries.html)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n::: small\nFuente: [Pebesma & Bivand (2025). Spatial Data Science](https://r-spatial.org/book/03-Geometries.html)\n:::\n\n--- \n\n\n::: {.cell}\n\n```{.r .cell-code}\nls <- st_multipoint(\n  rbind(\n    c(1, 1),\n    c(2, 2),\n    c(3, 1),\n    c(2, 3),\n    c(1, 4)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_coordinates(ls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     X Y L1\n[1,] 1 1  1\n[2,] 2 2  1\n[3,] 3 1  1\n[4,] 2 3  1\n[5,] 1 4  1\n```\n\n\n:::\n:::\n\n\n\n--- \n\n::: {.panel-tabset}\n\n### POLYGON\n\n\n::: {.cell}\n\n```{.r .cell-code}\npo <- st_polygon(list(\n  rbind(c(2, 1), c(3, 1), c(5, 2), c(6, 3), c(5, 3), \n        c(4, 4), c(3, 4), c(1, 3), c(2, 1)),\n  rbind(c(2.5, 2), c(3.5, 3), c(4.5, 3), c(4.5, 2), c(2.5, 2))\n))\n```\n:::\n\n\n\n### Coord.\n::: small\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_coordinates(po)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        X Y L1 L2\n [1,] 2.0 1  1  1\n [2,] 3.0 1  1  1\n [3,] 5.0 2  1  1\n [4,] 6.0 3  1  1\n [5,] 5.0 3  1  1\n [6,] 4.0 4  1  1\n [7,] 3.0 4  1  1\n [8,] 1.0 3  1  1\n [9,] 2.0 1  1  1\n[10,] 2.5 2  2  1\n[11,] 3.5 3  2  1\n[12,] 4.5 3  2  1\n[13,] 4.5 2  2  1\n[14,] 2.5 2  2  1\n```\n\n\n:::\n:::\n\n\n:::\n\n### Representación\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n--- \n\n### Simple feature geometries \n\n- Es un estándar ([ISO 19125-1:2004](https://www.iso.org/standard/40114.html))\n- Forma de describir las **geometrías** de los objetos espaciales\n- **features**: elementos que tienen una geometría y atributos adicionales que pueden incluir etiquetas descriptivas y/o valores que los cuantifican\n- **simple** se refiere a que las líneas y polígonos se pueden representar como secuencias de puntos conectados\n\n--- \n\n### Simple feature geometries \n::: small\n- Cada punto tiene al menos dos coordenadas $x$ e $y$\n\n::: {.callout-note}\n- Generalmente van en ese orden\n- Si son coord. elipsoidales puede ser `longitud` y `latitud`. Ojo en `EPSG:4326` el primer eje es la `latitud`\n::: \n- Coordenadas separadas por **espacios**: `(0 1)`\n- Puntos separados por **comas**: `((1 1), (2 2))`\n- Conjuntos agrupados por paréntesis `()` y separados por `,`\n- Los polígonos tienen un anillo externo y ninguno o varios anillos internos (`holes`)\n\n::: \n\n---\n\n\n### Simple feature geometries \n\n::: small\n- La representación en fomato texto se conoce como *Well-Known Text* (**[WKT](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry)**)\n:::\n\n```\nMULTIPOLYGON (((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1), (2.5 2, 3.5 3, 4.5 3, 4.5 2, 2.5 2)), ((3 7, 4 7, 5 8, 3 9, 2 8, 3 7)))\n```\n\n![Source: [Wikipedia](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry)](images/i_wkt.png){fig-align=\"center\" width=60%}\n\n---\n\n### Simple feature geometries\n- **Validez** de la geometría \n\n::: small\n\n- `LINESTRING` simples: cuando no intersectan\n- `POLYGON` y `MULTIPOLYGON`: \n  - anillos de los polígonos están cerrados (el último punto es igual al primero)\n  - Los anillos internos están dentro de su anillo exterior\n  - Los anillos internos de los polígonos tocan el anillo exterior como máximo en un solo punto, no a lo largo de una línea\n  - Convención: anillo externo (antihorario); anillo interno (horario)\n\n::: \n\n---\n\n### ¿Geometrías válidas?\n\n::: {.panel-tabset}\n## Ejemplo \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\npo_invalid <- st_polygon(list(\n  rbind(c(2, 1), c(3, 1), c(5, 2), c(6, 3), c(5, 3), \n        c(4, 4), c(3, 4), c(1, 3), c(2, 1)),\n  rbind(c(2.5, 2), c(3.5, 3), c(4, 3), c(5.0, 3), c(6, 3), c(4.0, 2), c(2, 1), c(2.5, 2))  \n))\n\nplot(po_invalid , border = 'black', col = \"blue\", lwd = 2)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n## Válido?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nst_is_valid(po_invalid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n- Convertir a válido \n\n\n::: {.cell}\n\n```{.r .cell-code}\npo_valid <- st_make_valid(po_invalid)\n```\n:::\n\n\n\n## Visualizar\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplot(po_valid , border = 'black', col = \"green\", lwd = 2)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## Formatos de datos vectoriales más comúnes \n::: small\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic lightable-striped lightable-hover\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> formato </th>\n   <th style=\"text-align:left;\"> extension </th>\n   <th style=\"text-align:left;\"> paquetes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Esri shapefile </td>\n   <td style=\"text-align:left;\"> .shp </td>\n   <td style=\"text-align:left;\"> rgdal, sf, maptools, raster </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CSV / GeoCSV </td>\n   <td style=\"text-align:left;\"> .csv </td>\n   <td style=\"text-align:left;\"> utils, sf, tidyverse </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GPX </td>\n   <td style=\"text-align:left;\"> .gpx </td>\n   <td style=\"text-align:left;\"> plotKML, XML, maptools </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> KML / KMZ </td>\n   <td style=\"text-align:left;\"> .kml; .kmz </td>\n   <td style=\"text-align:left;\"> rgdal, XML, sf </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GML / XML </td>\n   <td style=\"text-align:left;\"> .gml, .xml </td>\n   <td style=\"text-align:left;\"> XML, multiplex </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GeoJSON </td>\n   <td style=\"text-align:left;\"> .geojson; .json </td>\n   <td style=\"text-align:left;\"> geojsonio, rgdal, geojsonR, rjson </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> OpenStreetMap </td>\n   <td style=\"text-align:left;\"> .osm </td>\n   <td style=\"text-align:left;\"> OpenStreetMap, osmdata, tmaptools </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nFuentes: Royé, D & Serrano, R (2019). [Lovelace et al. (2022)](https://r.geocompx.org/read-write)\n::: \n\n<!--\n- ESRI: mínimo tres (.shp = geometría, .shx = índice de los objetos, .dbf= atributos)\n- CSV: contiene un campo WKT \n- \n--> \n\n## Atributos \n- Propiedades del objeto espacial que no describen su geometría\n- Tipos: \n  - propiedades derivadas de la geometría\n  - no derivadas de la geometría\n  \n  \n## Atributos (I) \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/intro-vector-data-r)](images/i_attributes.png){fig-align=\"center\" width=60%}\n\n## Atributos: derivados de geometría\n:::: {.columns}\n\n::: {.column width=\"65%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Mostrar el código\"}\nlibrary(maps)\n\nspain <- \n  maps::map(fill = TRUE, \n            plot = FALSE) |>\n  st_as_sf() |>\n  dplyr::filter(ID == \"Spain\")\n\nspain |> \n  st_geometry() |> \n  plot(graticule = TRUE, axis=TRUE) \n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-13-1.png){width=100%}\n:::\n:::\n\n\n\n:::\n\n::: {.column width=\"35%\"}\n\n- Área \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_area(spain)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n499032425530 [m^2]\n```\n\n\n:::\n:::\n\n\n\n\n- Perímetro\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_perimeter(spain)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n4475676 [m]\n```\n\n\n:::\n:::\n\n\n\n::: \n\n::: \n\n\n## Importar datos Vectoriales \n\npaquete **`sf`** \n\n- `st_read()`\n  - Función completa para leer archivos espaciales\n  - Permite controlar más parámetros, e.g. `quiet = TRUE` para suprimir mensajes\n\n- `read_sf()`\n  - Versión simplificada de `st_read()` \n  - Más amigable para `tidyverse`. Devuelve un `sf` tibble \n\n--- \n\n::: small\n| Característica       | `st_read()`                           | `read_sf()`                          |\n|----------------------|--------------------------------|--------------------------------|\n| **Funcionalidad**    | Control total sobre la lectura de datos espaciales | Versión simplificada, orientada a `tidyverse` |\n| **Tipo de salida**   | `sf` + `data.frame` | `sf` + `tibble` |\n| **Salida en consola** | Muestra más metadatos (CRS, número de geometrías) | Mensajes mínimos |\n| **Parámetros disponibles** | Mayor flexibilidad (`quiet = TRUE`, `layer`, `stringsAsFactors`) | Menos opciones de configuración |\n| **Conversión de texto** | Puede controlar `stringsAsFactors` | Usa caracteres (`character`) por defecto |\n| **Rendimiento**      | Más lento por el procesamiento extra de metadatos | Más rápido, ideal para grandes volúmenes de datos |\n\n::: \n\n## Importar datos vectoriales \n\n::: {.panel-tabset}\n### `st_read`\n\n::: small\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(here)\nsn_st <- st_read(here::here(\"assets/ext_data/geoinfo/sn_wdpa.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `sn_wdpa' from data source \n  `/Users/ajpelu/Library/CloudStorage/GoogleDrive-ajperez@go.ugr.es/My Drive/_docencia/ecoinformatica/ecoinformatica_web/ecoinformatica/assets/ext_data/geoinfo/sn_wdpa.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -3.643279 ymin: 36.91291 xmax: -2.588546 ymax: 37.25318\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n::: \n\n### `read_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsn_sf <- read_sf(here::here(\"assets/ext_data/geoinfo/sn_wdpa.shp\"))\n```\n:::\n\n\n\n### Comparación\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(sn_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(sn_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Importar datos vectoriales: Shapefiles \n\n::: small\n- Formato propietario mas extendido \n- Mínimo 3 archivos:\n  - **`.shp`**: contiene la geometría \n  - **`.shx`**: indexa las geometrías\n  - **`.dbf`**: almacena los atributos en formato tabular \n  - Otros:\n    - `.prj`: proyección\n    - `.sbn`, `.sbx`: índice espacial de las geometrías\n    - `.sph.xml`: metadatos geospaciales \n    \n::: \n\n## Importar datos vectoriales: Shapefiles \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(here)\nsn <- st_read(here::here(\"assets/ext_data/geoinfo/sn_wdpa.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `sn_wdpa' from data source \n  `/Users/ajpelu/Library/CloudStorage/GoogleDrive-ajperez@go.ugr.es/My Drive/_docencia/ecoinformatica/ecoinformatica_web/ecoinformatica/assets/ext_data/geoinfo/sn_wdpa.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -3.643279 ymin: 36.91291 xmax: -2.588546 ymax: 37.25318\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n## Importar datos vectoriales: Shapefiles \n\n::: small\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsn\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -3.643279 ymin: 36.91291 xmax: -2.588546 ymax: 37.25318\nGeodetic CRS:  WGS 84\n     WDPAID   WDPA_PI PA_DEF          NAME       ORIG_NA\n1 555588878 555588878      1 Sierra Nevada Sierra Nevada\n                                           DESIG     DESIG_E  DESIG_T IUCN_CA\n1 Zona de Importancia Comunitaria ZIC (ZEPA/ZEC) Natura 2000 National      IV\n         INT_CRI MARINE REP_M_A REP_ARE        NO_TAKE NO_TK_A     STATUS\n1 Not Applicable      0       0 1722.38 Not Applicable       0 Designated\n  STATUS_                                GOV_TYP      OWN_TYP\n1    1992 Federal or national ministry or agency Not Reported\n             MANG_AU      MANG_PL          VERIF METADAT      SUB_LOC PARENT_\n1 Junta de Andalucía Not Reported State Verified    2013 Not Reported     ESP\n  ISO3        SUPP_IN        CONS_OB                       geometry\n1  ESP Not Applicable Not Applicable POLYGON ((-3.384833 36.9406...\n```\n\n\n:::\n:::\n\n\n::: \n\n## Visualizar \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(sn)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n## Visualizar \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nplot(sn[\"NAME\"], col=NA, border= \"blue\", main=\"\", axes = TRUE)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n\n## Convertir a objetos spaciales \n::: small\n- Importar un csv con las coordenadas y convertirlo a un objeto espacial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nifn_sn <- read_csv(here(\"assets/ext_data/ifn_sn_geo.csv\"))\n\nhead(ifn_sn)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 8\n        x        y   crs id_unique_code    version province_code\n    <dbl>    <dbl> <dbl> <chr>             <chr>   <chr>        \n1 507000. 4112000. 23030 04_0792_NN_A3C_xx ifn3    04           \n2 507000. 4112000. 23030 04_0792_xx_A3E_xx ifn3    04           \n3 510000. 4111000. 23030 04_0794_xx_A4_xx  ifn3    04           \n4 506000. 4110000. 23030 04_0795_NN_A1_xx  ifn3    04           \n5 507000. 4110000. 23030 04_0796_NN_A1_xx  ifn3    04           \n6 508000. 4110000. 23030 04_0797_NN_A1_xx  ifn3    04           \n# ℹ 2 more variables: province_name_original <chr>, plot <chr>\n```\n\n\n:::\n:::\n\n\n:::\n\n## Convertir a objetos spaciales\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nifn_sn_geo <- st_as_sf(ifn_sn, \n                       coords = c(\"x\", \"y\"), \n                       crs = 23030)\n\nplot(st_geometry(ifn_sn_geo), pch=19, col=\"black\", cex=0.5)\nsn |> st_transform(23030) |> \n  plot(col = \"NA\", add = TRUE)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n--- \n\n\n## Kml \n\n::: small \n::: {.panel-tabset}\n## Importar \n- [Senderos Parques Nacionales](https://centrodedescargas.cnig.es/CentroDescargas/loadParquesNac)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://centrodedescargas.cnig.es/CentroDescargasRWS/rest/descargarArchivo/usuarioMovil/9780431\"\n\ndownload.file(\n  url = url,\n  destfile = here::here(\"assets/ext_data/geoinfo/sendero.kml\")\n)\n\nsendero <- read_sf(here::here(\"assets/ext_data/geoinfo/sendero.kml\"))\n```\n:::\n\n\n\n## Visualizar \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nsendero |> \n  st_geometry() |> \n  plot(graticule = TRUE, axes=TRUE) \n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-27-1.png){fig-align='center' width=480}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n::: \n\n::: \n\n## Importar datos vectoriales: GPX\n\n::: small\n- [Sendero Sulayr](https://portal.dipgra.es/es/rutas/gr-240-sendero-sulayr) \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- \"https://cdn.dipgra.es/my-media-files-bucket/documents/1461659948SulayrCompleto.gpx\"\n\ndownload.file(\n  url = url,\n  destfile = here::here(\"assets/ext_data/geoinfo/sulary.gpx\")\n)\n\nsulayr <- read_sf(here::here(\"assets/ext_data/geoinfo/sulary.gpx\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, :\nautomatically selected the first layer in a data source containing more than\none.\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-important}\n\n### ¿Qué nos está adviertiendo con este *warning*?\n\n:::\n\n::: \n\n\n## Importar datos vectoriales: Capas disponibles\n::: small\n- Algunos objetos espaciales pueden contener varias capas\n- Explorar las capas existentes con `st_layers` \n\n\n::: {.panel-tabset}\n### Capas \n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_layers(here(\"assets/ext_data/geoinfo/sulary.gpx\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDriver: GPX \nAvailable layers:\n    layer_name     geometry_type features fields crs_name\n1    waypoints             Point       34     24   WGS 84\n2       routes       Line String        0     12   WGS 84\n3       tracks Multi Line String        1     13   WGS 84\n4 route_points             Point        0     25   WGS 84\n5 track_points             Point    11759     26   WGS 84\n```\n\n\n:::\n:::\n\n\n\n### Lectura \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsulayr_ruta <- read_sf(here(\"assets/ext_data/geoinfo/sulary.gpx\"), \n                       layer = \"tracks\")\n\n\nsulayr_puntos <- read_sf(here(\"assets/ext_data/geoinfo/sulary.gpx\"), \n                       layer = \"waypoints\")\n```\n:::\n\n\n\n### Visualización\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n::: \n\n::: \n\n\n\n## Ráster \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/introduction-working-raster-data-r)](images/i_raster.png){fig-align=\"center\" width=60%}\n\n## Ráster\n\n::: {.panel-tabset}\n### Crear un ráster\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- matrix(c(1, 2, 3, 4, 2, NA, 2, 2, 3, 3, 3, 1), \n            ncol = 4, nrow = 3, byrow = TRUE)\n\nm \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    2   NA    2    2\n[3,]    3    3    3    1\n```\n\n\n:::\n:::\n\n\n\n### `terra`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nr <- terra::rast(m)\nplot(r)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-35-1.png){width=960}\n:::\n:::\n\n\n\n### `raster`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(raster)\nra <- raster::raster(m)\nplot(ra)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n## Ráster\n\n::: {.panel-tabset}\n\n### `terra`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 3, 4, 1  (nrow, ncol, nlyr)\nresolution  : 1, 1  (x, y)\nextent      : 0, 4, 0, 3  (xmin, xmax, ymin, ymax)\ncoord. ref. :  \nsource(s)   : memory\nname        : lyr.1 \nmin value   :     1 \nmax value   :     4 \n```\n\n\n:::\n:::\n\n\n\n### `raster`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nra\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass      : RasterLayer \ndimensions : 3, 4, 12  (nrow, ncol, ncell)\nresolution : 0.25, 0.3333333  (x, y)\nextent     : 0, 1, 0, 1  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : layer \nvalues     : 1, 4  (min, max)\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Componentes de un ráster\n::: small\n| Componente   | Descripción |\n|-------------|------------|\n| **Dimensiones (`dim()`)** | Número de filas, columnas y bandas. |\n| **Extensión (`ext()`)** | Coordenadas mínimas y máximas (`xmin, xmax, ymin, ymax`). |\n| **Resolución (`res()`)** | Tamaño de cada celda en unidades espaciales. |\n| **Número de Bandas (`nlyr()`)** | Cantidad de capas o bandas en el raster (multibanda o singleband). |\n| **Sistema de Referencia (`crs()`)** | Código EPSG o Proyección (WGS84, UTM, etc.). |\n| **Valores (`values()`)** | Datos almacenados en cada celda (elevación, temperatura, NDVI, etc.). |\n::: \n\n## Extensión \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/introduction-working-raster-data-r)](images/i_raster_ext.png){fig-align=\"center\" width=80%}\n\n\n## Resolución ráster \n- Tamaño de cada celda\n- Nivel de detalle:\n  - Alta resolución: Celdas pequeñas, más detalle\n  - Baja resolución: Celdas grandes, menos detalle\n- Cálculo: \n$$ resolución = \\frac{x_{max} - x_{min}}{n_{columnas}}, \\frac{y_{max} - y_{min}}{n_{filas}} $$ \n\n---\n\n**Extensión - Resolución - Sistema de Coordenadas** \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/introduction-working-raster-data-r)](images/i_raster_res.png){fig-align=\"center\" width=80%}\n\n\n## Ejemplo Ráster \n\n::: {.panel-tabset}\n## Metadatos  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nmy_rast <- terra::rast(here::here(\"assets/ext_data/geoinfo/tmin_1971_2000_3042.tif\"))\nmy_rast\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 453, 364, 1  (nrow, ncol, nlyr)\nresolution  : 100, 100  (x, y)\nextent      : 437414, 473814, 4071295, 4116595  (xmin, xmax, ymin, ymax)\ncoord. ref. : ETRS89 / UTM zone 30N \nsource      : tmin_1971_2000_3042.tif \nname        : tmin_1971_2000 \nmin value   :      -1.647195 \nmax value   :      12.123637 \n```\n\n\n:::\n:::\n\n\n\n## Visualización\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-40-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n## Formatos ráster más comunes\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic lightable-striped lightable-hover\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> formato </th>\n   <th style=\"text-align:left;\"> extension </th>\n   <th style=\"text-align:left;\"> paquetes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Esri grid </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> rgdal, sp, SDMTools </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GeoTiff </td>\n   <td style=\"text-align:left;\"> .tif, .tiff, .ovr </td>\n   <td style=\"text-align:left;\"> raster, terra </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ASCII </td>\n   <td style=\"text-align:left;\"> .asc, .txt </td>\n   <td style=\"text-align:left;\"> raster, terra, rgdal </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> IMG </td>\n   <td style=\"text-align:left;\"> .img </td>\n   <td style=\"text-align:left;\"> raster, terra </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n## Sistemas de Referencia de Coordenadas \n::: small \n- Datos espaciales = datos + CRS\n- Modelo matemático que conecta los datos con la superficie de la Tierra\n- CRS le dice al software (QGIS, R, ...) en que espacio geográfico está la información, y qué metodo usar para proyectar la información sobre el espacio geográfico\n::: \n\n\n## Sistemas de Referencia de Coordenadas \n::: small \n**Estándares** para compartir información CRS\n\n- [**`proj`**](https://proj.org/en/stable/):\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"+proj=longlat +datum=WGS84 +no_defs\"\n```\n\n\n:::\n:::\n\n\n\n- [**`EPSG`**](https://spatialreference.org/ref/epsg/):\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n```\n\n\n:::\n:::\n\n\n::: \n\n## Sistemas de Referencia de Coordenadas\n\n- Comprobar proyección  \n\n::: {.panel-tabset}\n### `raster`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin_ra <- raster::raster((here::here(\"assets/ext_data/geoinfo/tmin_1971_2000_3042.tif\")))\n\nraster::projection(tmin_ra)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"+proj=utm +zone=30 +ellps=GRS80 +units=m +no_defs\"\n```\n\n\n:::\n:::\n\n\n\n### `terra`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin <- terra::rast((here::here(\"assets/ext_data/geoinfo/tmin_1971_2000_3042.tif\")))\n\nterra::crs(tmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PROJCRS[\\\"ETRS89 / UTM zone 30N\\\",\\n    BASEGEOGCRS[\\\"ETRS89\\\",\\n        DATUM[\\\"European Terrestrial Reference System 1989\\\",\\n            ELLIPSOID[\\\"GRS 1980\\\",6378137,298.257222101,\\n                LENGTHUNIT[\\\"metre\\\",1]],\\n            ID[\\\"EPSG\\\",6258]],\\n        PRIMEM[\\\"Greenwich\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433,\\n                ID[\\\"EPSG\\\",9122]]]],\\n    CONVERSION[\\\"Transverse Mercator\\\",\\n        METHOD[\\\"Transverse Mercator\\\",\\n            ID[\\\"EPSG\\\",9807]],\\n        PARAMETER[\\\"Latitude of natural origin\\\",0,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8801]],\\n        PARAMETER[\\\"Longitude of natural origin\\\",-3,\\n            ANGLEUNIT[\\\"degree\\\",0.0174532925199433],\\n            ID[\\\"EPSG\\\",8802]],\\n        PARAMETER[\\\"Scale factor at natural origin\\\",0.9996,\\n            SCALEUNIT[\\\"unity\\\",1],\\n            ID[\\\"EPSG\\\",8805]],\\n        PARAMETER[\\\"False easting\\\",500000,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8806]],\\n        PARAMETER[\\\"False northing\\\",0,\\n            LENGTHUNIT[\\\"metre\\\",1],\\n            ID[\\\"EPSG\\\",8807]]],\\n    CS[Cartesian,2],\\n        AXIS[\\\"easting\\\",east,\\n            ORDER[1],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]],\\n        AXIS[\\\"northing\\\",north,\\n            ORDER[2],\\n            LENGTHUNIT[\\\"metre\\\",1,\\n                ID[\\\"EPSG\\\",9001]]]]\"\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Sistemas de Referencia de Coordenadas\n\n- Transformar (e.g. `EPSG:4326`) \n\n::: {.panel-tabset}\n### `raster`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin_ra_4326 <- raster::projectRaster(tmin_ra, \n                                      crs = \"+proj=longlat +datum=WGS84\")\n```\n:::\n\n\n\n### `terra`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin_4326 <- terra::project(tmin, \"EPSG:4326\")\n```\n:::\n\n\n\n::: \n\n## Sistemas de Referencia de Coordenadas\n\n- Conversión vectorial\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Datos del inventario forestal \nifn_sn_geo <- st_as_sf(ifn_sn, coords = c(\"x\", \"y\"), crs = 23030)\n\n# st_crs(ifn_sn_geo)\n\nifn_sn_geo_4326 <- sf::st_transform(ifn_sn_geo, 4326)\n```\n:::\n\n\n\n\n## Consultar metadatos Ráster\n::: small\n- Número de celdas \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncell(my_rast)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 164892\n```\n\n\n:::\n:::\n\n\n\n- Dimensiones\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(my_rast)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 453 364   1\n```\n\n\n:::\n:::\n\n\n\n- Resolución\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres(my_rast)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 100 100\n```\n\n\n:::\n:::\n\n\n\n- Extensión espacial\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\next(my_rast)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatExtent : 437414.020914246, 473814.020914246, 4071295.34996962, 4116595.34996962 (xmin, xmax, ymin, ymax)\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Stacks   \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-53-1.png){width=960}\n:::\n:::\n\n\n\n::: small\nFuente: [Pebesma & Bivand (2025)](https://r-spatial.org/book/)\n::: \n\n## Data cubes \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-54-1.png){width=960}\n:::\n:::\n\n\n\n\n\n--- \n \n![Source: [Pebesma & Bivand (2025)](https://r-spatial.org/book/)](images/i_data_cube.png){fig-align=\"center\" width=80%}\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n---\n\n![Source: [Pebesma & Bivand (2025)](https://r-spatial.org/book/)](images/i_data_cube_filter.png){fig-align=\"center\" width=60%}\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n# Operaciones básicas con vectores \n\n--- \n\n### Bounding box\n::: small\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Mostrar el código\"}\nlibrary(maps)\n\npib <- \n  maps::map(fill = TRUE, \n            plot = FALSE) |>\n  st_as_sf() |>\n  dplyr::filter(ID %in% \n                  c(\"Spain\", \"Portugal\"))\n\npib |> \n  st_geometry() |> \n  plot(graticule = TRUE, axis=TRUE) \npib |> \n  st_bbox() |> \n  st_as_sfc() |> \n  plot(add = TRUE, border = \"blue\")\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-57-1.png){width=100%}\n:::\n:::\n\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\nRectángulo mínimo que delimita una geometría espacial mediante sus **coordenadas extremas** (xmin, ymin, xmax, ymax).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_bbox(pib)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     xmin      ymin      xmax      ymax \n-9.479736 36.025928  4.322070 43.764549 \n```\n\n\n:::\n:::\n\n\n\nConvertir a poligono\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npib_bb <- pib |> \n  st_bbox() |> \n  st_as_sfc()\n```\n:::\n\n\n\n:::\n\n::::\n\n::: \n\n\n\n\n\n--- \n\n### Métricas: Área \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_area(pib)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [m^2]\n[1] 499032425530  87850920379\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-warning}\n\n## ¿Porqué aparecen dos valores para el área? \n::: small \n\n\n::: {.cell}\n\n```{.r .cell-code}\npib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -9.479736 ymin: 36.02593 xmax: 4.32207 ymax: 43.76455\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n               ID                           geom\nSpain       Spain MULTIPOLYGON (((1.593945 38...\nPortugal Portugal MULTIPOLYGON (((-7.406153 3...\n```\n\n\n:::\n:::\n\n\n:::\n\n::: \n\n::: small \n- ¿Y si las quiero en km$^2$? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(units)\npib |> \n  sf::st_area() |> \n  units::set_units(\"km^2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [km^2]\n[1] 499032.43  87850.92\n```\n\n\n:::\n:::\n\n\n::: \n\n--- \n\n### Métricas: Perímetro\n\n::: small\nCalcula el perímetro de Portugal\n::: \n\n::: {.cell}\n\n```{.r .cell-code}\npor <- pib |> \n  dplyr::filter(ID == \"Portugal\")\n\nsf::st_perimeter(por) |> \n  set_units(\"km\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1891.562 [km]\n```\n\n\n:::\n:::\n\n\n--- \n\n\n### Métricas: Distancia\n\n::: small\nEjemplo: Tenemos una parcela en un pinar de repoblación, en la que estamos evaluando la cantidad de semillas de Quercíneas que pueden llegar dispersadas por el arrendajo. Si tenemos una matrix de paisaje conformada por diferentes manchas de encinar y robledal, y suponiendo que las diferentes manchas de bosque de quercíneas tienen la misma cantidad de propágulos y la misma probabilidad de ser visitadas por los arrendajos, ¿Quien tiene mas probabilidad de colonizar el pinar de repoblación? \n::: \n\n--- \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(sf)\nlibrary(dplyr)\n\n# Crear polígonos irregulares distribuidos más aleatoriamente\nencinar_1 <- st_polygon(list(rbind(c(1,5), c(2.3,4.2), c(3.2,5.6), c(3,7), c(2.1,7.5), c(1.3,7), c(0.7,5.8), c(1,5))))\nencinar_2 <- st_polygon(list(rbind(c(7,2), c(8.5,1.1), c(9.6,2.3), c(9.2,3.9), c(8.4,4.4), c(7.6,4.1), c(7.1,2.8), c(7,2))))\nrobledal_1 <- st_polygon(list(rbind(c(3,8), c(4.7,7.1), c(5.4,8.5), c(5.1,9.6), c(4.3,10.3), c(3.5,9.9), c(3.1,8.8), c(3,8))))\nrobledal_2 <- st_polygon(list(rbind(c(8,6), c(9.9,5.0), c(10.8,7.1), c(10.2,8.5), c(9.1,9.3), c(8.2,7.8), c(8,6))))\npinar <- st_polygon(list(rbind(c(4,4), c(6.1,2.8), c(7,5), c(6.5,6.5), c(5.6,6.0), c(4.8,4.6), c(4,4))))\n\n\nmanchas <- st_sf(\n  nombre = c(\"Encinar A\", \"Encinar B\", \"Robledal A\", \"Robledal B\", \"Pinar\"),\n  tipo = c(\"Encinar\", \"Encinar\", \"Robledal\", \"Robledal\", \"Pinar\"),\n  geometry = st_sfc(encinar_1, encinar_2, robledal_1, robledal_2, pinar),\n  colores = c(\"darkgreen\", \"darkgreen\", \"gold\", \"gold\", \"green\"),\n  crs = 4326 \n)\n\nmanchas <- st_transform(manchas, 23030)\n\nplot(manchas[\"tipo\"], col = manchas$colores, graticule = TRUE, axes = TRUE)\nlegend(\"bottomleft\", legend =  unique(manchas$tipo), \n       fill = unique(manchas$colores), title = \"Tipo de Manchas\")\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-64-1.png){width=960}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npinar_geom <- \n  manchas |> filter(tipo == \"Pinar\") |> st_geometry()\n\n# Calcular la distancia desde encinares y robledales al pinar\ndistancias <- manchas |> \n  filter(tipo %in% c(\"Encinar\", \"Robledal\")) |> \n  mutate(distancia_pinar = st_distance(geometry, pinar_geom))\n\n# Mostrar la tabla con las distancias\ndistancias |> \n  st_drop_geometry() |> \n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      nombre     tipo   colores distancia_pinar\n1  Encinar A  Encinar darkgreen    171639.7 [m]\n2  Encinar B  Encinar darkgreen    101197.6 [m]\n3 Robledal A Robledal      gold    158715.4 [m]\n4 Robledal B Robledal      gold    142413.1 [m]\n```\n\n\n:::\n:::\n\n\n\n--- \n\n### Calcular los centroides \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentroides <- st_centroid(manchas)\ncentroides\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 1056093 ymin: 312472.9 xmax: 1875675 ymax: 970443.5\nProjected CRS: ED50 / UTM zone 30N\n      nombre     tipo   colores                 geometry\n1  Encinar A  Encinar darkgreen POINT (1056093 654811.1)\n2  Encinar B  Encinar darkgreen POINT (1764113 312472.9)\n3 Robledal A Robledal      gold POINT (1295830 970443.5)\n4 Robledal B Robledal      gold POINT (1875675 801768.1)\n5      Pinar    Pinar     green POINT (1478019 512249.9)\n```\n\n\n:::\n:::\n\n\n\n--- \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = manchas, aes(fill = tipo)) +\n  geom_sf(data = centroides) \n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-67-1.png){width=960}\n:::\n:::\n\n\n\n## Selección espacial\n\n::: small\n¿Qué parcelas del Inventario forestal puedo usar para evaluar el estado de la vegetación en la zona del incendio de Lanjarón? \n\n::: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincendio <- read_sf(here::here(\"assets/ext_data/geoinfo/lanjaron_fire.shp\"))\n\nifn_incendio <- ifn_sn_geo |> \n  st_transform(3042) |> \n  st_filter(incendio)\n```\n:::\n\n\n\n## Selección espacial\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = incendio, fill=NA) + \n  geom_sf(data = ifn_incendio) \n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-69-1.png){width=960}\n:::\n:::\n\n--- \n### Unión de atributos \n\n::: small\n- Permite unir tablas de atributos a los objetos espaciales.\n- Tienen que compartir una clave común \n\n- Ejemplo: Representa la riqueza de cada parcela forestal en Sierra Nevada \n\n::: {.panel-tabset}\n## Calcula atributos forestales \n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nd <- read_csv(here::here(\"assets/ext_data/ifn_sn_tree.csv\"))\n\n# Calcular abundancia de individuos en cada plot \nab_ifn <- d |> \n  group_by(plot) |> \n  count() \n\n# Calcular riqueza de especies en cada plot  \nriqueza_ifn <- d |> \n  group_by(plot) |> \n  summarise(riqueza = n_distinct(specie))\n```\n:::\n\n## Unión de datos\n::: {.cell}\n\n```{.r .cell-code}\nifn_sn_geo_riqueza <- ifn_sn_geo |> \n  inner_join(ab_ifn, by = c(\"plot\" = \"plot\")) |> \n  inner_join(riqueza_ifn, by = c(\"plot\" = \"plot\"))\n```\n:::\n\n::: \n\n:::\n\n## Unión de atributos: visualización \n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggspatial)\n\nggplot() +\n  geom_sf(data = sn, color = \"blue\", size = 1) +\n  geom_sf(data = ifn_sn_geo_riqueza, aes(size = riqueza)) +\n  annotation_north_arrow(location = \"topleft\",\n                         width = unit(1, \"cm\")) +\n  annotation_scale(location = \"br\", width_hint = 0.3) + \n  theme_bw() + \n  ggtitle(\"Parcelas del Inventario Nacional Forestal (IFN3) en Sierra Nevada\")\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-72-1.png){width=960}\n:::\n:::\n\n\n\n## (Extra) Uniones de datos tabulares \n\n![Source: [R for Data Science (2ed)](https://r4ds.hadley.nz/joins.html)](images/i_venn.png){fig-align=\"center\" width=80%}\n\n## Visualización de mapas \n::: small\nElementos **básicos** de un mapa\n\n- **Escala**: Establece la relación entre las distancias en el mapa y las distancias reales en el terreno\n- **Simbología y Leyenda**: Define los símbolos, colores y estilos utilizados para representar los elementos geográficos, permitiendo al usuario interpretar correctamente la información presentada\n- **Flecha de Norte** (Rosa de los Vientos): Indica la orientación del mapa, ayudando al lector a comprender la dirección de los elementos geográficos\n- **Cuadrícula de Coordenadas**: Proporciona un sistema de referencia que facilita la localización precisa de puntos en el mapa, mostrando líneas y etiquetas de coordenadas \n- **Mapa de Ubicación**: Ofrece una vista general que sitúa el área de estudio dentro de un contexto geográfico más amplio, ayudando al lector a comprender su ubicación relativa\n\n::: \n\n\n## Visualización de mapas\n:::small \n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggspatial)\n\nmapa<- ggplot() +\n  geom_sf(data = sn, color = \"blue\", size = 1) +\n  geom_sf(data = ifn_sn_geo) +\n  annotation_north_arrow(location = \"topleft\",\n                         width = unit(1, \"cm\")) +\n  annotation_scale(location = \"br\", width_hint = 0.3) + \n  theme_bw() + \n  ggtitle(\"Parcelas del Inventario Nacional Forestal (IFN3) en Sierra Nevada\")\nmapa\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-73-1.png){width=960}\n:::\n:::\n\n::: \n\n## Visualización de mapas\n\n::: small\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmapa_general <- ggplot() + \n  geom_sf(data = pib, fill=\"gray\") +\n  geom_sf(data = sn, fill=\"black\", color=NA) + \n  theme_minimal() +\n  theme(\n    panel.background = element_blank(),   \n    plot.background = element_blank(),\n    panel.grid = element_blank(),\n    axis.text = element_blank()\n  )\n\nmapa_general\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-74-1.png){width=960}\n:::\n:::\n::: \n\n## Visualización de mapas\n\n:::small\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowplot)\n\nggdraw() + \n  draw_plot(mapa) + \n  draw_plot(mapa_general, \n            x = 0.73, y = 0.625, \n            width = 0.28, height = 0.28)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-75-1.png){width=960}\n:::\n:::\n\n:::\n\n## Operaciones básicas con raster\n\n::: small \n::: {.panel-tabset}\n\n## Crop \n::: {.cell}\n\n```{.r .cell-code}\ntmin <- terra::rast((here::here(\"assets/ext_data/geoinfo/tmin_1971_2000_3042.tif\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin_crop <- terra::crop(tmin, incendio)\nplot(tmin_crop)\nplot(incendio, add = TRUE, colorr=NA)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-77-1.png){width=960}\n:::\n:::\n\n## Mask \n::: {.cell}\n\n```{.r .cell-code}\ntmin_mask <- terra::mask(tmin, incendio)\nplot(tmin_mask)\nplot(incendio, add = TRUE, colorr=NA)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-78-1.png){width=960}\n:::\n:::\n\n\n## Crop & Mask\n::: {.cell}\n\n```{.r .cell-code}\ntmin_mask_cropped <- terra::mask(tmin_crop, incendio)\nplot(tmin_mask_cropped)\nplot(incendio, add = TRUE, colorr=NA)\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-79-1.png){width=960}\n:::\n:::\n::: \n\n::: \n\n## ¿Alguna duda? \n\n- {{< fa brands bluesky >}} [ajpelu.bsky.social](https://bsky.app/profile/ajpelu.bsky.social)\n\n\n- [antonio.perez@inia.csic.es](mailto: antonio.perez@inia.csic.es)\n\n\n<small>Ayuda JDC2022-050056-I financiada por MCIN/AEI /10.13039/501100011033 y por la Unión Europea NextGenerationEU/PRTR</small>\n\n![](../../assets/images/logo-jdc.png){fig-align=\"center\" width=40%}\n\n\n::: {.callout-tip}\n## Si usas esta presentación puedes citarla como:\n<small>**Pérez-Luque, A.J. **(2025). Introducción a los SIG con R. Material Docente de la Asignatura: Ciclo de Gestión de los Datos. Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad. Universidad de Granada. [https://ecoinfugr.github.io/ecoinformatica/](https://ecoinfugr.github.io/ecoinformatica/) </small>\n:::\n",
    "supporting": [
      "intro_sig_programando_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}