{
  "hash": "ea2032a40260563ac9a94d62c66a41a2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducción a los SIG en R\" \nauthor: \n  - name: \"Antonio J. Pérez-Luque\"\n    orcid: 0000-0002-1747-0469\n    email: antonio.perez@inia.csic.es\n    affiliation: Instituto de Ciencias Forestales (CIFOR) | INIA-CSIC (Madrid)\ndate: 2025-02-07\nsesion: 5\nformat: \n  revealjs:\n    auto-stretch: false \n    logo: \"../../assets/images/logo-ugr.png\"\n    footer: Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad\n    theme: [default, \"../../custom_theme.scss\"] \n    transition: fade\n    background-transition: fade\n    highlight-style: a11y\n    code-block-background: true\n    code-link: true\ncrossref:\n  fig-title: Figura     # (default is \"Figure\")\n  tbl-title: Tabla     # (default is \"Table\")\n  title-delim: .     # (default is \":\")\n  fig-prefix: Figura\n  tbl-prefix: Tabla\n  ref-hyperlink: true\n  sec-prefix: \"\"\n  sec-labels: alpha\nexecute:\n  echo: true     \n  eval: true     \n  output: true   \n  include: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Tipos de Datos Espaciales\n\n## Datos Vectoriales \n\n![Source: [NEON](https://www.neonscience.org/resources/learning-hub/tutorials/intro-vector-data-r)](images/i_vectorial.png){fig-align=\"center\" width=60%}\n\n--- \n\n## [The big 7](https://r-spatial.org/book/03-Geometries.html)\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n::: small\nFuente: [Pebesma & Bivand (2025). Spatial Data Science](https://r-spatial.org/book/03-Geometries.html)\n:::\n\n--- \n\n\n::: {.cell}\n\n```{.r .cell-code}\nls <- st_multipoint(\n  rbind(\n    c(1, 1),\n    c(2, 2),\n    c(3, 1),\n    c(2, 3),\n    c(1, 4)\n  )\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_coordinates(ls)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     X Y L1\n[1,] 1 1  1\n[2,] 2 2  1\n[3,] 3 1  1\n[4,] 2 3  1\n[5,] 1 4  1\n```\n\n\n:::\n:::\n\n\n\n--- \n\n::: {.panel-tabset}\n\n### POLYGON\n\n\n::: {.cell}\n\n```{.r .cell-code}\npo <- st_polygon(list(\n  rbind(c(2, 1), c(3, 1), c(5, 2), c(6, 3), c(5, 3), \n        c(4, 4), c(3, 4), c(1, 3), c(2, 1)),\n  rbind(c(2.5, 2), c(3.5, 3), c(4.5, 3), c(4.5, 2), c(2.5, 2))\n))\n```\n:::\n\n\n\n### Coord.\n::: small\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_coordinates(po)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        X Y L1 L2\n [1,] 2.0 1  1  1\n [2,] 3.0 1  1  1\n [3,] 5.0 2  1  1\n [4,] 6.0 3  1  1\n [5,] 5.0 3  1  1\n [6,] 4.0 4  1  1\n [7,] 3.0 4  1  1\n [8,] 1.0 3  1  1\n [9,] 2.0 1  1  1\n[10,] 2.5 2  2  1\n[11,] 3.5 3  2  1\n[12,] 4.5 3  2  1\n[13,] 4.5 2  2  1\n[14,] 2.5 2  2  1\n```\n\n\n:::\n:::\n\n\n:::\n\n### Representación\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n::: \n\n--- \n\n### Simple feature geometries \n\n- Es un estándar ([ISO 19125-1:2004](https://www.iso.org/standard/40114.html))\n- Forma de describir las **geometrías** de los objetos espaciales\n- **features**: elementos que tienen una geometría y atributos adicionales que pueden incluir etiquetas descriptivas y/o valores que los cuantifican\n- **simple** se refiere a que las líneas y polígonos se pueden representar como secuencias de puntos conectados\n\n--- \n\n### Simple feature geometries \n::: small\n- Cada punto tiene al menos dos coordenadas $x$ e $y$\n\n::: {.callout-note}\n- Generalmente van en ese orden\n- Si son coord. elipsoidales puede ser `longitud` y `latitud`. Ojo en `EPSG:4326` el primer eje es la `latitud`\n::: \n- Coordenadas separadas por **espacios**: `(0 1)`\n- Puntos separados por **comas**: `((1 1), (2 2))`\n- Conjuntos agrupados por paréntesis `()` y separados por `,`\n- Los polígonos tienen un anillo externo y ninguno o varios anillos internos (`holes`)\n\n::: \n\n---\n\n\n### Simple feature geometries \n\n- La representación en fomato texto se conoce como *Well-Known Text* (**[WKT](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry)**)\n\n```\nMULTIPOLYGON (((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1), (2.5 2, 3.5 3, 4.5 3, 4.5 2, 2.5 2)), ((3 7, 4 7, 5 8, 3 9, 2 8, 3 7)))\n```\n\n![Source: [Wikipedia](https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry)](images/i_wkt.png){fig-align=\"center\" width=60%}\n\n---\n\n### Simple feature geometries\n- Importacia de las geometrías **válidas**\n\n::: small\n\n- `LINESTRING` simples: cuando no intersectan\n- `POLYGON` y `MULTIPOLYGON`: \n  - anillos de los polígonos están cerrados (el último punto es igual al primero)\n  - Los anillos internos están dentro de su anillo exterior\n  - Los anillos internos de los polígonos tocan el anillo exterior como máximo en un solo punto, no a lo largo de una línea\n  - Convención: anillo externo (antihorario); anillo interno (horario)\n\n::: \n\n---\n\n### ¿Geometrías válidas?\n\n::: {.panel-tabset}\n## Ejemplo \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Válido?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nst_is_valid(po_invalid)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n\n- Convertir a válido \n\n\n::: {.cell}\n\n```{.r .cell-code}\npo_valid <- st_make_valid(po_invalid)\n```\n:::\n\n\n\n## Convertir\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n:::\n\n## Formatos de datos vectoriales más comúnes \n::: small\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-classic lightable-striped lightable-hover\" style='font-family: \"Arial Narrow\", \"Source Sans Pro\", sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> formato </th>\n   <th style=\"text-align:left;\"> extension </th>\n   <th style=\"text-align:left;\"> paquetes </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Esri shapefile </td>\n   <td style=\"text-align:left;\"> .shp </td>\n   <td style=\"text-align:left;\"> rgdal, sf, maptools, raster </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CSV / GeoCSV </td>\n   <td style=\"text-align:left;\"> .csv </td>\n   <td style=\"text-align:left;\"> utils, sf, tidyverse </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GPX </td>\n   <td style=\"text-align:left;\"> .gpx </td>\n   <td style=\"text-align:left;\"> plotKML, XML, maptools </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> KML / KMZ </td>\n   <td style=\"text-align:left;\"> .kml; .kmz </td>\n   <td style=\"text-align:left;\"> rgdal, XML, sf </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GML / XML </td>\n   <td style=\"text-align:left;\"> .gml, .xml </td>\n   <td style=\"text-align:left;\"> XML, multiplex </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GeoJSON </td>\n   <td style=\"text-align:left;\"> .geojson; .json </td>\n   <td style=\"text-align:left;\"> geojsonio, rgdal, geojsonR, rjson </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> OpenStreetMap </td>\n   <td style=\"text-align:left;\"> .osm </td>\n   <td style=\"text-align:left;\"> OpenStreetMap, osmdata, tmaptools </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nFuentes: Royé, D & Serrano, R (2019). [Lovelace et al. (2022)](https://r.geocompx.org/read-write)\n::: \n\n<!--\n- ESRI: mínimo tres (.shp = geometría, .shx = índice de los objetos, .dbf= atributos)\n- CSV: contiene un campo WKT \n- \n--> \n\n## Atributos \n- Propiedades del objeto espacial que no describen su geometría\n- Tipos: \n  - propiedades derivadas de la geometría\n  - no derivadas de la geometría\n  \n## Importar datos Vectoriales \n\npaquete **`sf`** \n\n- `st_read()`\n  - Función completa para leer archivos espaciales\n  - Permite controlar más parámetros, e.g. `quiet = TRUE` para suprimir mensajes\n\n- `read_sf()`\n  - Versión simplificada de `st_read()` \n  - Más amigable para `tidyverse`. Devuelve un `sf` tibble \n\n--- \n\n::: small\n| Característica       | `st_read()`                           | `read_sf()`                          |\n|----------------------|--------------------------------|--------------------------------|\n| **Funcionalidad**    | Control total sobre la lectura de datos espaciales | Versión simplificada, orientada a `tidyverse` |\n| **Tipo de salida**   | `sf` + `data.frame` | `sf` + `tibble` |\n| **Salida en consola** | Muestra más metadatos (CRS, número de geometrías) | Mensajes mínimos |\n| **Parámetros disponibles** | Mayor flexibilidad (`quiet = TRUE`, `layer`, `stringsAsFactors`) | Menos opciones de configuración |\n| **Conversión de texto** | Puede controlar `stringsAsFactors` | Usa caracteres (`character`) por defecto |\n| **Rendimiento**      | Más lento por el procesamiento extra de metadatos | Más rápido, ideal para grandes volúmenes de datos |\n\n::: \n\n## Importar datos vectoriales \n\n::: {.panel-tabset}\n### `st_read`\n\n::: small\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nlibrary(here)\nsn_st <- st_read(here::here(\"assets/ext_data/geoinfo/sn_wdpa.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `sn_wdpa' from data source \n  `/Users/ajpelu/Library/CloudStorage/GoogleDrive-ajperez@go.ugr.es/My Drive/_docencia/ecoinformatica/ecoinformatica_web/ecoinformatica/assets/ext_data/geoinfo/sn_wdpa.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 28 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -3.643279 ymin: 36.91291 xmax: -2.588546 ymax: 37.25318\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n::: \n\n### `read_sf`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsn_sf <- read_sf(here::here(\"assets/ext_data/geoinfo/sn_wdpa.shp\"))\n```\n:::\n\n\n\n### Comparación\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(sn_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(sn_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n\n\n\n\n\n\n\n\n## Raster \n\n...\n\n## Sistemas de Coordenadas \n\n# Operaciones básicas con vectores \n\n## Paquetes en R \n\n--- \n\n### Bounding box\n::: small\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Mostrar el código\"}\nlibrary(maps)\n\npib <- \n  maps::map(fill = TRUE, \n            plot = FALSE) |>\n  st_as_sf() |>\n  dplyr::filter(ID %in% \n                  c(\"Spain\", \"Portugal\"))\n\npib |> \n  st_geometry() |> \n  plot(graticule = TRUE, axis=TRUE) \npib |> \n  st_bbox() |> \n  st_as_sfc() |> \n  plot(add = TRUE, border = \"blue\")\n```\n\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-16-1.png){width=100%}\n:::\n:::\n\n\n\n\n:::\n\n::: {.column width=\"50%\"}\n\nRectángulo mínimo que delimita una geometría espacial mediante sus **coordenadas extremas** (xmin, ymin, xmax, ymax).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_bbox(pib)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     xmin      ymin      xmax      ymax \n-9.479736 36.025928  4.322070 43.764549 \n```\n\n\n:::\n:::\n\n\n\nConvertir a poligono\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npib_bb <- pib |> \n  st_bbox() |> \n  st_as_sfc()\n```\n:::\n\n\n\n:::\n\n::::\n\n::: \n\n\n\n\n\n--- \n\n### Métricas: Área \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsf::st_area(pib)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [m^2]\n[1] 499032425530  87850920379\n```\n\n\n:::\n:::\n\n\n\n::: {.callout-warning}\n\n## ¿Porqué aparecen dos valores para el área? \n::: small \n\n\n::: {.cell}\n\n```{.r .cell-code}\npib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2 features and 1 field\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -9.479736 ymin: 36.02593 xmax: 4.32207 ymax: 43.76455\nGeodetic CRS:  +proj=longlat +ellps=clrk66 +no_defs +type=crs\n               ID                           geom\nSpain       Spain MULTIPOLYGON (((1.593945 38...\nPortugal Portugal MULTIPOLYGON (((-7.406153 3...\n```\n\n\n:::\n:::\n\n\n:::\n\n::: \n\n::: small \n- ¿Y si las quiero en km$^2$? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(units)\npib |> \n  sf::st_area() |> \n  units::set_units(\"km^2\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnits: [km^2]\n[1] 499032.43  87850.92\n```\n\n\n:::\n:::\n\n\n::: \n\n--- \n\n### Métricas: Perímetro\n\n::: small\nCalcula el perímetro de Portugal\n::: \n\n::: {.cell}\n\n```{.r .cell-code}\npor <- pib |> \n  dplyr::filter(ID == \"Portugal\")\n\nsf::st_perimeter(por) |> \n  set_units(\"km\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n1891.562 [km]\n```\n\n\n:::\n:::\n\n\n--- \n\n\n### Métricas: Distancia\n\n::: small\nEjemplo: Tenemos una parcela en un pinar de repoblación, en la que estamos evaluando la cantidad de semillas de Quercíneas que pueden llegar dispersadas por el arrendajo. Si tenemos una matrix de paisaje conformada por diferentes manchas de encinar y robledal, y suponiendo que las diferentes manchas de bosque de quercíneas tienen la misma cantidad de propágulos y la misma probabilidad de ser visitadas por los arrendajos, ¿Quien tiene mas probabilidad de colonizar el pinar de repoblación? \n::: \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](intro_sig_programando_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n##\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npinar_geom <- \n  manchas |> filter(tipo == \"Pinar\") |> st_geometry()\n\n# Calcular la distancia desde encinares y robledales al pinar\ndistancias <- manchas |> \n  filter(tipo %in% c(\"Encinar\", \"Robledal\")) |> \n  mutate(distancia_pinar = st_distance(geometry, pinar_geom))\n\n# Mostrar la tabla con las distancias\ndistancias |> \n  st_drop_geometry() |> \n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      nombre     tipo   colores distancia_pinar\n1  Encinar A  Encinar darkgreen    171639.7 [m]\n2  Encinar B  Encinar darkgreen    101197.6 [m]\n3 Robledal A Robledal      gold    158715.4 [m]\n4 Robledal B Robledal      gold    142413.1 [m]\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n## Operaciones básicas con raster \n\n\n\n## Recursos\n\n- Royé, D & Serrano, R (2019). Introducción a los SIG con R. Universidad de Zaragoza.\n\n## ¿Alguna duda? \n\n- {{< fa brands bluesky >}} [ajpelu.bsky.social](https://bsky.app/profile/ajpelu.bsky.social)\n\n\n- [antonio.perez@inia.csic.es](mailto: antonio.perez@inia.csic.es)\n\n\n<small>Ayuda JDC2022-050056-I financiada por MCIN/AEI /10.13039/501100011033 y por la Unión Europea NextGenerationEU/PRTR</small>\n\n![](../../assets/images/logo-jdc.png){fig-align=\"center\" width=40%}\n\n\n::: {.callout-tip}\n## Si usas esta presentación puedes citarla como:\n<small>**Pérez-Luque, A.J. **(2025). Introducción a los SIG con R. Material Docente de la Asignatura: Ciclo de Gestión de los Datos. Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad. Universidad de Granada. [https://ecoinfugr.github.io/ecoinformatica/](https://ecoinfugr.github.io/ecoinformatica/) </small>\n:::\n",
    "supporting": [
      "intro_sig_programando_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}