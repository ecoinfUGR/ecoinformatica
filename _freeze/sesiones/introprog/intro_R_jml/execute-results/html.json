{
  "hash": "01fe93a94c4dc1e5615e8c83b18cbc80",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Primeros pasos con R\"\nformat: html\nnumber-sections: false\nnumber-depth: 4\ndate: 2025-01-10\nsesion: 1\nauthor: \n  - name: \"Javier Martínez-López\"\n    orcid: 0000-0002-0825-7252\n    email: javier.martinez@ugr.es\n    affiliation: Departamento de Ecología, Universidad de Granada\ncrossref:\n  fig-title: Figura     # (default is \"Figure\")\n  tbl-title: Tabla     # (default is \"Table\")\n  title-delim: .     # (default is \":\")\n  fig-prefix: Figura\n  tbl-prefix: Tabla\n  ref-hyperlink: true\n  sec-prefix: \"\"\n  sec-labels: alpha\n---\n\n\n\n# Introducción a R {.unnumbered}\n\n## ¿Qué es **RStudio**?\n\n[RStudio](https://posit.co/download/rstudio-desktop/) es un entorno de desarrollo integrado (IDE) para R y Python.\n\n![](https://upload.wikimedia.org/wikipedia/commons/c/c2/RStudio_202.04.2_Build_764_-_CuerdOS_1.1_Cessna.png)\n\n## ¿Qué es **R**?\n\n> [R](http://cran.r-project.org) es un **lenguaje de programación** principalmente orientado al análisis estadístico y visualización de información cuantitativa y cualitativa y publicado como **software libre**.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncitation()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTo cite R in publications use:\n\n  R Core Team (2024). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  <https://www.R-project.org/>.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2024},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n```\n\n\n:::\n:::\n\n\n\n## [Librerías](https://cran.r-project.org/web/packages/)\n\n* Las funciones se agrupan por paquetes o librerías\n* Las Funciones más habituales se incluyen por defecto en R (base)\n* Las librerías se pueden instalar y cargar fácilmente (`install.packages()` y `library()`)\n\n## Librerías\n\nPor ejemplo [ggplot2](https://cran.r-project.org/web/packages/ggplot2/index.html)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('ggplot2')  # Instala el paquete 'ggplot2'\n\nlibrary(ggplot2)  # Carga el paquete 'ggplot2' para usar sus funciones\n\nlibrary(help=ggplot2)  # Muestra la ayuda disponible para el paquete 'ggplot2'\n\nbrowseVignettes()\n```\n:::\n\n\n\nHay conjuntos de librerías según su temática llamadas [Task Views](http://cran.r-project.org/web/views)\n\n## Fuentes de información\n\n* [Manuales oficiales](https://cran.r-project.org/manuals.html)\n* [Manuales externos](https://cran.r-project.org/other-docs.html)\n* [Listas de correo](http://www.r-project.org/mail.html)\n* [R-bloggers](http://www.r-bloggers.com)\n* [Comunidad R-Hispano](http://r-es.org/)\n* [Apuntes de Luís Cayuela](http://luiscayuela.blogspot.com.es/)\n* [R Cookbook, 2nd Edition](https://rc2e.com/)\n* [Manipulación de datos e investigación reproducible en R](https://bookdown.org/content/bc094819-6bce-4648-83a2-c015ba9ef1aa/)\n\n## Ayuda\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhelp(\"aov\") ## Ayuda sobre una función específica\n\nhelp('+') ## Ayuda sobre operadores matemáticos\n\nhelp.search('linear model') ## Búsqueda de palabras clave\n```\n:::\n\n\n\n# Elementos de R\n\n## Variables, constantes y operadores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 3.25  # Asigna el valor 3.25 a la variable 'a'\n\na = 3.25  # Otra forma de asignar valores\n\nnombre <- 'Pepe'  # Asigna una cadena de texto a la variable: nombre\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nas.Date('2000-01-01')  # Convierte un texto en un objeto de tipo fecha\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2000-01-01\"\n```\n\n\n:::\n\n```{.r .cell-code}\nas.Date('2000-01-01') + 2  # Suma días a una fecha\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2000-01-03\"\n```\n\n\n:::\n:::\n\n\n\n### Constantes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNULL ## Representa un objeto vacío\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNULL\n```\n\n\n:::\n\n```{.r .cell-code}\nNA ## Representa un valor faltante\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n\n```{.r .cell-code}\nNaN ## Representa un valor no numérico (ejemplo: 1/0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NaN\n```\n\n\n:::\n\n```{.r .cell-code}\npi ## Constante matemática predefinida\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.141593\n```\n\n\n:::\n:::\n\n\n\n### Operadores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na == 3.25  # Compara si 'a' es igual a 3.25\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\na == 6  # Compara si 'a' es igual a 6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] FALSE\n```\n\n\n:::\n\n```{.r .cell-code}\nnombre != 'Juan'  # Verifica si 'nombre' no es igual a 'Juan'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nnombre == 'Pepe'  # Verifica si 'nombre' es igual a 'Pepe'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\na != 2  # Verifica si 'a' no es igual a 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n5 < 6  # Verifica si 5 es menor que 6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\n10 >= 5  # Verifica si 10 es mayor o igual a 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n#### Operadores aritméticos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n1 + 2  # Suma\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\n1 - 2  # Resta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1\n```\n\n\n:::\n\n```{.r .cell-code}\n5 / 3  # División\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.666667\n```\n\n\n:::\n\n```{.r .cell-code}\n2 ^ 3  # Potencia\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(10)  # Raíz cuadrada\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.162278\n```\n\n\n:::\n\n```{.r .cell-code}\nrunif(5, min = 0, max = 100) # Números aleatorios\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 37.50953 24.35718 99.23489 52.33144 13.75842\n```\n\n\n:::\n:::\n\n\n\n## Vectores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- NULL # Crea un vector vacío\n\na <- 1:10 # Crea un vector con valores del 1 al 10\n\nc <- seq(1, 10, by = 0.5) # Crea un vector secuencial con incrementos de 0.5\n\nd <- c(0, 1, 1, 2, 3) # Crea un vector con valores específicos\n\ne <- c('b1', 'b2', 'b3') # Crea un vector de cadenas de texto\n\nf <- rep(5, 6) # Crea un vector repitiendo el número 5 seis veces\n\nd[1] # Obtiene el primer elemento del vector 'd'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nd[-1] # Excluye el primer elemento del vector 'd'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 1 2 3\n```\n\n\n:::\n:::\n\n\n\n## Matrices\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmat <- matrix(1:12, 3, 4) # Crea una matriz con valores del 1 al 12, dispuestos en 3 filas y 4 columnas\n\nmat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n```\n\n\n:::\n\n```{.r .cell-code}\nmatrix(1:12, 3, 4, byrow = TRUE) # La matriz se rellena por filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    4\n[2,]    5    6    7    8\n[3,]    9   10   11   12\n```\n\n\n:::\n\n```{.r .cell-code}\nrbind(1:5, 11:15, 21:25) # Une vectores como filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]   11   12   13   14   15\n[3,]   21   22   23   24   25\n```\n\n\n:::\n\n```{.r .cell-code}\ncbind(1:5, 11:15, 21:25) # Une vectores como columnas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1   11   21\n[2,]    2   12   22\n[3,]    3   13   23\n[4,]    4   14   24\n[5,]    5   15   25\n```\n\n\n:::\n\n```{.r .cell-code}\nmat[1:2, 2:3] # Selecciona valores de las filas 1 y 2, columnas 2 y 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]    4    7\n[2,]    5    8\n```\n\n\n:::\n\n```{.r .cell-code}\nmat[, -2] # Excluye la segunda columna de la matriz\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    7   10\n[2,]    2    8   11\n[3,]    3    9   12\n```\n\n\n:::\n\n```{.r .cell-code}\nt(mat) # Transpone la matriz\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9\n[4,]   10   11   12\n```\n\n\n:::\n:::\n\n\n\n## Data frames\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmat <- matrix(1:30, 10) ## Crea una matriz con valores del 1 al 30 en 10 filas\n\nmat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2] [,3]\n [1,]    1   11   21\n [2,]    2   12   22\n [3,]    3   13   23\n [4,]    4   14   24\n [5,]    5   15   25\n [6,]    6   16   26\n [7,]    7   17   27\n [8,]    8   18   28\n [9,]    9   19   29\n[10,]   10   20   30\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_mat <- as.data.frame(mat) ## Convierte la matriz en un 'data.frame'\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(df_mat) # Muestra los nombres de las columnas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"V1\" \"V2\" \"V3\"\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_mat[2, 1] # Selecciona un elemento específico (fila 2, columna 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_mat$V1 # Selecciona una columna por su nombre\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\n\n:::\n:::\n\n\n\n# Gestión del espacio de trabajo\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(cars) # Carga un conjunto de datos de ejemplo\n\nls() # Lista los objetos en el entorno actual (en RStudio no hace falta)\n\nrm(a) # Borra el objeto 'a'\n\nrm(list = ls()) # Borra todos los objetos del entorno\n```\n:::\n\n\n\n# Importar y manejar mis datos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(iris) # Carga el conjunto de datos 'iris'\n\nhead(iris) # Muestra las primeras filas del conjunto de datos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\ntail(iris) # Muestra las últimas filas del conjunto de datos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(iris) # Muestra las dimensiones (filas y columnas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 150   5\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(iris) # Muestra los nombres de las columnas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n```\n\n\n:::\n\n```{.r .cell-code}\nattach(iris) # Hace las columnas de 'iris' accesibles directamente\n\nby(Sepal.Length, Species, summary) # Genera resúmenes por especie\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpecies: setosa\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.300   4.800   5.000   5.006   5.200   5.800 \n------------------------------------------------------------ \nSpecies: versicolor\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.900   5.600   5.900   5.936   6.300   7.000 \n------------------------------------------------------------ \nSpecies: virginica\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  4.900   6.225   6.500   6.588   6.900   7.900 \n```\n\n\n:::\n\n```{.r .cell-code}\nby(Sepal.Length, Species, mean) # Genera la media por especie\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpecies: setosa\n[1] 5.006\n------------------------------------------------------------ \nSpecies: versicolor\n[1] 5.936\n------------------------------------------------------------ \nSpecies: virginica\n[1] 6.588\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(Sepal.Length) # Muestra las primeras observaciones de una columna\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.1 4.9 4.7 4.6 5.0 5.4\n```\n\n\n:::\n\n```{.r .cell-code}\n# detach(iris) # Desvincula el conjunto de datos\n```\n:::\n\n\n\n## Primeros pasos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(df_mat) # Muestra los nombres de las columnas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"V1\" \"V2\" \"V3\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(df_mat) <- c('B1', 'B2', 'B3') # Renombra las columnas\n\nrownames(df_mat) # Muestra los nombres de las filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\"\n```\n\n\n:::\n\n```{.r .cell-code}\nrownames(df_mat) <- LETTERS[1:10] # Renombra las filas con letras en mayúscula\n\nhead(df_mat) # Muestra las primeras filas del 'data.frame'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B1 B2 B3\nA  1 11 21\nB  2 12 22\nC  3 13 23\nD  4 14 24\nE  5 15 25\nF  6 16 26\n```\n\n\n:::\n:::\n\n\n\n## Seleccionar de mis datos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris[, 1] # Selecciona la primera columna\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 5.1\n [19] 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 5.2 5.5 4.9 5.0\n [37] 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 7.0 6.4 6.9 5.5\n [55] 6.5 5.7 6.3 4.9 6.6 5.2 5.0 5.9 6.0 6.1 5.6 6.7 5.6 5.8 6.2 5.6 5.9 6.1\n [73] 6.3 6.1 6.4 6.6 6.8 6.7 6.0 5.7 5.5 5.5 5.8 6.0 5.4 6.0 6.7 6.3 5.6 5.5\n [91] 5.5 6.1 5.8 5.0 5.6 5.7 5.7 6.2 5.1 5.7 6.3 5.8 7.1 6.3 6.5 7.6 4.9 7.3\n[109] 6.7 7.2 6.5 6.4 6.8 5.7 5.8 6.4 6.5 7.7 7.7 6.0 6.9 5.6 7.7 6.3 6.7 7.2\n[127] 6.2 6.1 6.4 7.2 7.4 7.9 6.4 6.3 6.1 7.7 6.3 6.4 6.0 6.9 6.7 6.9 5.8 6.8\n[145] 6.7 6.7 6.3 6.5 6.2 5.9\n```\n\n\n:::\n\n```{.r .cell-code}\niris[1:6, -1] # Selecciona las primeras 6 filas excluyendo la primera columna\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Width Petal.Length Petal.Width Species\n1         3.5          1.4         0.2  setosa\n2         3.0          1.4         0.2  setosa\n3         3.2          1.3         0.2  setosa\n4         3.1          1.5         0.2  setosa\n5         3.6          1.4         0.2  setosa\n6         3.9          1.7         0.4  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\niris[1:3, ] # Selecciona las primeras 3 filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n```\n\n\n:::\n\n```{.r .cell-code}\niris[-1:-140, ] # Excluye las primeras 140 filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n141          6.7         3.1          5.6         2.4 virginica\n142          6.9         3.1          5.1         2.3 virginica\n143          5.8         2.7          5.1         1.9 virginica\n144          6.8         3.2          5.9         2.3 virginica\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n\n\n:::\n\n```{.r .cell-code}\niris[1:6, c(1, 3)] # Selecciona las columnas 1 y 3 de las primeras 6 filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Petal.Length\n1          5.1          1.4\n2          4.9          1.4\n3          4.7          1.3\n4          4.6          1.5\n5          5.0          1.4\n6          5.4          1.7\n```\n\n\n:::\n\n```{.r .cell-code}\niris[1:6, -c(1, 3)] # Excluye las columnas 1 y 3 de las primeras 6 filas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Width Petal.Width Species\n1         3.5         0.2  setosa\n2         3.0         0.2  setosa\n3         3.2         0.2  setosa\n4         3.1         0.2  setosa\n5         3.6         0.2  setosa\n6         3.9         0.4  setosa\n```\n\n\n:::\n:::\n\n\n\n## Estadísticos descriptivos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(Species) # Crea una tabla de frecuencia por especie\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpecies\n    setosa versicolor  virginica \n        50         50         50 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(iris) # Resumen estadístico del conjunto 'iris'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(cars) # Resumen estadístico del conjunto 'cars'\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n```\n\n\n:::\n\n```{.r .cell-code}\nsd(iris$Sepal.Length) # Desviación estándar de una variable\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8280661\n```\n\n\n:::\n:::\n\n\n\n## Exportar datos\n\nExportar un 'data.frame' como archivo CSV (valores separados por 'comas').\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite.table(df_mat, # data.frame\n            'df_mat.csv', # nombre del archivo de salida\n            sep=';', # Separador de columnas\n            dec=',', # Separador decimal\n            col.names=TRUE, # Mantener nombres de las columnas\n            row.names=FALSE) # No guardar nombres de las filas\n```\n:::\n\n\n\n#  Funciones \n\nnombre_función<-function(argumentos){expresión}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndi_hola_mundo <- function() {\n  print('¡Hola Mundo!') # Imprime un mensaje en la consola\n}\n\ndi_hola_mundo() # Llama a la función\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"¡Hola Mundo!\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na_euros <- function(pesetas) {\n  pesetas / 166.386 # Convierte pesetas a euros\n}\n\na_euros(1000) # Convierte 1000 pesetas a euros\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.010121\n```\n\n\n:::\n\n```{.r .cell-code}\na_pesetas <- function(euros) {\n  euros * 166.386 # Convierte euros a pesetas\n}\n\na_pesetas(6) # Convierte 6 euros a pesetas\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 998.316\n```\n\n\n:::\n:::\n\n\n\n## ¿Cómo se haría la función 'Área del triángulo'?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea_triangulo <- function(b = 3, h = 5) { # valores por defecto\n  b * h / 2 # Calcula el área de un triángulo\n}\n\narea_triangulo() # Usa los valores por defecto\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.5\n```\n\n\n:::\n\n```{.r .cell-code}\narea_triangulo(b = 4) # Especifica un valor diferente para la base\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n:::\n\n\n\n# Gráficos \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crea un gráfico con un título y etiquetas de ejes\n\nplot(\n  x = 1:10,\n  y = 1:10,\n  xlab = 'eje X',\n  ylab = 'eje Y',\n  main = 'Título' \n)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Gráfico con líneas\n\nplot(\n  x = 1:10,\n  y = 1:10,\n  type = 'l',\n  xlab = 'eje X',\n  ylab = 'eje Y',\n  main = 'Título' \n)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-22-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Gráfico con puntos y líneas\n\nplot(\n  x = 1:10,\n  y = 1:10,\n  type = 'o',\n  xlab = 'eje X',\n  ylab = 'eje Y',\n  main = 'Título' \n)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-22-3.png){width=672}\n:::\n:::\n\n\n\n## Leyendas (gráficos básicos)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crea un gráfico de dispersión coloreado por especie\n\nplot(\n  Sepal.Length,\n  Petal.Length,\n  col = as.factor(Species),\n  xlab = 'Long. Sépalo',\n  ylab = 'Long. Pétalo' \n)\n\n# Agrega una leyenda al gráfico\n\nlegend(7, # Posición en el eje X\n       3, # Posición en el eje Y\n       col = c(1:3),\n       pch = 1, # Símbolo\n       legend = unique(Species)) # Valores únicos de la variable Species\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n## Usando ggplot2\n\n:::{.callout-warning}\n[Manual de ggplot2](https://ggplot2.tidyverse.org/reference/)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data=iris,\n       aes(x = Petal.Length,\n           y = Petal.Width)) +\n  geom_point(aes(color=Species))\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n## Histogramas (gráficos básicos)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Opción A\n\nindice_versicolor <- Species == 'versicolor' # Índice lógico para filtrar por especie\n\nhist(Sepal.Length[indice_versicolor]) # Histograma de longitudes de sépalo para 'versicolor'\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Opción B\n\nsl_versicolor <- subset(Sepal.Length, Species == 'versicolor') # Otra forma de filtrar\n\nhist(sl_versicolor) # Histograma del subconjunto filtrado\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-25-2.png){width=672}\n:::\n:::\n\n\n\n## Exportación de gráficos (agrupados)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#jpeg('histogramas.jpg')\n\npar(mfrow = c(1, 2)) # Divide la ventana gráfica en una cuadrícula de 1x2\n\nhist(Sepal.Length) # Histograma de todas las longitudes de sépalo\n\nhist(Sepal.Length[indice_versicolor]) # Histograma de longitudes de sépalo para 'versicolor'\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#dev.off() # Cierra el dispositivo gráfico (= guarda el fichero)\n```\n:::\n\n\n\n## Histogramas (ggplot2)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = iris,\n       aes(x = Sepal.Length)) +\n  geom_histogram() +\n  labs( x = \"Longitud del sépalo\",\n        y = \"Frecuencia\",\n        title = \"Histograma longitud del sépalo\") +\n  theme_light()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave('histograma.png')\n```\n:::\n\n\n\n## Diagramas de cajas (boxplots)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboxplot(Sepal.Length ~ Species) # Diagrama de cajas de longitudes de sépalo por especie\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# boxplot usando ggplot2\n\nggplot(data = iris,\n       aes(x = Species,\n           y = Sepal.Length,\n           fill = Species)) +\n  geom_boxplot() +\n  labs( x = \"Especies\",\n        y = \"Longitud del sépalo\",\n        title = \"Gráfico de cajas y bigotes\",\n        subtitle = \"Longitud del sépalo por especies\")\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-28-2.png){width=672}\n:::\n:::\n\n\n\n## Diagramas de barras y lectura de datos\n\n:::{.callout-important}\n[bar1_data.csv](data/bar1_data.csv)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbar1_data <- read.table('data/bar1_data.csv',\n                        sep = ',', # El separador de columnas es la coma\n                        header = T) # La primera fila es el encabezado\n\nstr(bar1_data) # tipos de datos de las columnas del data.frame\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t8 obs. of  3 variables:\n $ Site : chr  \"S1\" \"S2\" \"S3\" \"S4\" ...\n $ year : int  2000 2000 2000 2000 2000 2000 2000 2000\n $ value: num  0.755 0.43 0.977 0.959 1.414 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(bar1_data$value, names.arg = factor(bar1_data$Site)) # Crea un gráfico de barras\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggplot2\n\nggplot(bar1_data,\n       aes(x = Site,\n           y = value)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-30-2.png){width=672}\n:::\n:::\n\n\n\n:::{.callout-tip}\nEjercicio adicional: ¿Cómo leemos el archivo [iris.csv](data/iris.csv)?\n:::\n\n## Gráficos de regresión lineal\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_pl_sl <- lm(Petal.Length ~ Sepal.Length) # Ajusta un modelo lineal\n\nshapiro.test(lm_pl_sl$residuals) # Comprueba la normalidad de los residuos del modelo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  lm_pl_sl$residuals\nW = 0.99437, p-value = 0.831\n```\n\n\n:::\n\n```{.r .cell-code}\nhist(lm_pl_sl$residuals) # Comprueba la normalidad de los residuos del modelo\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(lm_pl_sl) # Resumen del modelo\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Petal.Length ~ Sepal.Length)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.47747 -0.59072 -0.00668  0.60484  2.49512 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -7.10144    0.50666  -14.02   <2e-16 ***\nSepal.Length  1.85843    0.08586   21.65   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8678 on 148 degrees of freedom\nMultiple R-squared:   0.76,\tAdjusted R-squared:  0.7583 \nF-statistic: 468.6 on 1 and 148 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n## Gráfico del modelo \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# require(ggplot2) # Carga el paquete ggplot2\n\nc <- ggplot(iris,\n            aes(y = Petal.Length,\n                x = Sepal.Length)) # Define un gráfico base\n\nc + stat_smooth(method = lm,\n                colour = \"black\") +\n  geom_point(aes(col = factor(Species))) # Agrega capas al gráfico\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# ggsave('iris_lm.png') # Guardar gráfico\n```\n:::\n\n\n\n## Gráfico de barras agrupadas \n\n:::{.callout-important}\nLee el archivo 'data/bar2_data.csv' (contiene más años)\n\n[bar2_data.csv](data/bar2_data.csv)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbar2_data <- read.table('data/bar2_data.csv',\n                        sep = '|',\n                        header = T) \n\nstr(bar2_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t20 obs. of  3 variables:\n $ Site : chr  \"S1\" \"S2\" \"S3\" \"S4\" ...\n $ year : int  2000 2000 2000 2000 2000 2000 2000 2000 2001 2001 ...\n $ value: num  0.755 -0.43 0.977 0.959 1.414 ...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bar2_data,\n       aes(x = Site,\n           y = value,\n           fill = factor(year)) # Agrupamos por año\n       ) +\n  geom_col(position = position_dodge(preserve = \"single\"))\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n## Gráfico de barras en subfiguras \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bar2_data, aes(x = Site, y = value)) +\n  geom_col() +\n  facet_wrap( ~ year)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n## Preparar datos para ggplot2\n\n:::{.callout-important}\n[data.csv](data/data.csv)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reshape2) # Carga la librería reshape\n\ndata<-read.table('data/data.csv',\n                 sep = '\\t',\n                 header = T) # Lee un archivo de datos\n\nhead(data) # Muestra las primeras filas del conjunto de datos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  site       var1       var2\n1    a  0.7549967  0.4457979\n2    b -0.4297789 -0.5818249\n3    c  0.9768700  0.1715152\n4    d  0.9594651 -0.7068345\n5    e  1.4142136  1.0907563\n6    f  0.3863983  0.3364102\n```\n\n\n:::\n\n```{.r .cell-code}\ndata_ggplot2 <- melt(data,\n                     id = c('site')) \n\ndata_ggplot2 # Muestra los datos transformados\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   site variable      value\n1     a     var1  0.7549967\n2     b     var1 -0.4297789\n3     c     var1  0.9768700\n4     d     var1  0.9594651\n5     e     var1  1.4142136\n6     f     var1  0.3863983\n7     g     var1  0.3980741\n8     a     var2  0.4457979\n9     b     var2 -0.5818249\n10    c     var2  0.1715152\n11    d     var2 -0.7068345\n12    e     var2  1.0907563\n13    f     var2  0.3364102\n14    g     var2  0.4796152\n```\n\n\n:::\n\n```{.r .cell-code}\ndata_orginal<-dcast(data_ggplot2, site ~ variable) # convertir niveles de una variable en columnas\n\nhead(data_orginal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  site       var1       var2\n1    a  0.7549967  0.4457979\n2    b -0.4297789 -0.5818249\n3    c  0.9768700  0.1715152\n4    d  0.9594651 -0.7068345\n5    e  1.4142136  1.0907563\n6    f  0.3863983  0.3364102\n```\n\n\n:::\n\n```{.r .cell-code}\nhelp(dcast) # función de agregación (similar a tabla pivotante de Excel)\n```\n:::\n\n\n\n# Test de tendencias de series temporales ([Mann-Kendall](https://github.com/nxskok/mkac))\n\n## Análisis de la serie de datos 1\n\n:::{.callout-important}\nDatos: [ts.csv](data/ts.csv)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# devtools::install_github(\"nxskok/mkac\")\n\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mkac)\n\n# Cargar los datos\ndata<-read.table('data/ts.csv', sep=',', header = TRUE)\n\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t27 obs. of  2 variables:\n $ date : chr  \"20/01/2024\" \"22/01/2024\" \"25/01/2024\" \"10/02/2024\" ...\n $ value: num  0.1 0.5 0.6 0.3 0.5 0.6 0.4 0.8 0.2 0.7 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretar las fechas\ndata$date <- as.Date(data$date, format = '%d/%m/%Y')\n\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t27 obs. of  2 variables:\n $ date : Date, format: \"2024-01-20\" \"2024-01-22\" ...\n $ value: num  0.1 0.5 0.6 0.3 0.5 0.6 0.4 0.8 0.2 0.7 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(data$date, data$value)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Extraer mes del año en una nueva columna\n\ndata$month <- month(data$date)\n\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        date value month\n1 2024-01-20   0.1     1\n2 2024-01-22   0.5     1\n3 2024-01-25   0.6     1\n4 2024-02-10   0.3     2\n5 2024-02-24   0.5     2\n6 2024-03-12   0.6     3\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(data$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 1  2  3  4  5  6  7  8  9 10 11 12 \n 3  2  3  2  2  2  2  2  2  2  2  3 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Nueva tabla de datos con medias mensuales\n\ndata_monthly_mean <- aggregate(value ~ month, data, mean)\n\nplot(data_monthly_mean$month, data_monthly_mean$value)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-37-2.png){width=672}\n:::\n\n```{.r .cell-code}\nkendall_Z_adjusted(data_monthly_mean$value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$z\n[1] 0.8228706\n\n$z_star\n[1] 0.8228706\n\n$ratio\n[1] 1\n\n$P_value\n[1] 0.4105816\n\n$P_value_adj\n[1] 0.4105816\n```\n\n\n:::\n\n```{.r .cell-code}\ntheil_sen_slope(y = data_monthly_mean$value, x = data_monthly_mean$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.01666667\n```\n\n\n:::\n\n```{.r .cell-code}\n# Alternativa (sin pendiente de Sen):\n\n# library(Kendall)\n\n# MannKendall(data_monthly_mean$value)\n```\n:::\n\n\n\n## Análisis de la serie de datos 2\n\n:::{.callout-important}\nDatos: [ts2.csv](data/ts2.csv)\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar los datos\ndata <- read.table('data/ts2.csv', sep = ',', header = TRUE)\n\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t27 obs. of  2 variables:\n $ date : chr  \"20/01/2024\" \"22/01/2024\" \"25/01/2024\" \"10/02/2024\" ...\n $ value: num  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 ...\n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretar las fechas\ndata$date <- as.Date(data$date, format = '%d/%m/%Y')\n\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t27 obs. of  2 variables:\n $ date : Date, format: \"2024-01-20\" \"2024-01-22\" ...\n $ value: num  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(data$date, data$value)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Extraer mes del año en una nueva columna\n\ndata$month <- month(data$date)\n\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        date value month\n1 2024-01-20   0.1     1\n2 2024-01-22   0.2     1\n3 2024-01-25   0.3     1\n4 2024-02-10   0.4     2\n5 2024-02-24   0.5     2\n6 2024-03-12   0.6     3\n```\n\n\n:::\n\n```{.r .cell-code}\n# Nueva tabla de datos con medias mensuales\n\ndata_monthly_mean <- aggregate(value ~ month, data, mean)\n\nplot(data_monthly_mean$month, data_monthly_mean$value)\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-38-2.png){width=672}\n:::\n\n```{.r .cell-code}\nkendall_Z_adjusted(data_monthly_mean$value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$z\n[1] 4.525788\n\n$z_star\n[1] 4.525788\n\n$ratio\n[1] 1\n\n$P_value\n[1] 6.017083e-06\n\n$P_value_adj\n[1] 6.017083e-06\n```\n\n\n:::\n\n```{.r .cell-code}\ntheil_sen_slope(y = data_monthly_mean$value, x = data_monthly_mean$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2083333\n```\n\n\n:::\n:::\n\n\n\n## Análisis de la serie de datos 2 (la manera [tidyverse](https://www.tidyverse.org/))\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar las librerías necesarias\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr   1.1.4     ✔ stringr 1.5.1\n✔ forcats 1.0.0     ✔ tibble  3.2.1\n✔ purrr   1.0.2     ✔ tidyr   1.3.1\n✔ readr   2.1.5     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n\n# Cargar los datos\n\n# data <- read_csv('data/ts2.csv') # Crearía un tibble: https://cran.r-project.org/web/packages/tibble/vignettes/tibble.html\n\ndata <- read.table('data/ts2.csv', sep = ',', header = TRUE)\n\n# Inspeccionar la estructura de los datos\n\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 27\nColumns: 2\n$ date  <chr> \"20/01/2024\", \"22/01/2024\", \"25/01/2024\", \"10/02/2024\", \"24/02/2…\n$ value <dbl> 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3,…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Interpretar las fechas\n\ndata <- data %>% \n  mutate(date = dmy(date))\n\nglimpse(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 27\nColumns: 2\n$ date  <date> 2024-01-20, 2024-01-22, 2024-01-25, 2024-02-10, 2024-02-24, 202…\n$ value <dbl> 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3,…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Graficar la serie temporal\n\ndata %>% \n  ggplot(aes(x = date, y = value)) + \n  geom_point() + \n  labs(title = \"Serie temporal\", x = \"Fecha\", y = \"Valor\")\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Extraer mes del año en una nueva columna\n\ndata <- data %>% \n  mutate(month = month(date))\n\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        date value month\n1 2024-01-20   0.1     1\n2 2024-01-22   0.2     1\n3 2024-01-25   0.3     1\n4 2024-02-10   0.4     2\n5 2024-02-24   0.5     2\n6 2024-03-12   0.6     3\n```\n\n\n:::\n\n```{.r .cell-code}\n# Nueva tabla de datos con medias mensuales\n\ndata_monthly_mean <- data %>% \n  group_by(month) %>% \n  summarise(value = mean(value, na.rm = TRUE))\n\n# Graficar las medias mensuales\n\ndata_monthly_mean %>% \n  ggplot(aes(x = month, y = value)) + \n  geom_point() + \n  labs(title = \"Media mensual\", x = \"Mes\", y = \"Valor promedio\")\n```\n\n::: {.cell-output-display}\n![](intro_R_jml_files/figure-html/unnamed-chunk-39-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Análisis de tendencia con funciones de Kendall y Theil-Sen\n\nkendall_Z_adjusted(data_monthly_mean$value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$z\n[1] 4.525788\n\n$z_star\n[1] 4.525788\n\n$ratio\n[1] 1\n\n$P_value\n[1] 6.017083e-06\n\n$P_value_adj\n[1] 6.017083e-06\n```\n\n\n:::\n\n```{.r .cell-code}\ntheil_sen_slope(y = data_monthly_mean$value, x = data_monthly_mean$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2083333\n```\n\n\n:::\n:::\n",
    "supporting": [
      "intro_R_jml_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}