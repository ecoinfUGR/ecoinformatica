{
  "hash": "923cd66312004ca0e32da9431b55678c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Tidy data\" \nauthor: \n  - name: \"Antonio J. Pérez-Luque\"\n    orcid: 0000-0002-1747-0469\n    email: antonio.perez@inia.csic.es\n    affiliation: Instituto de Ciencias Forestales (CIFOR) | INIA-CSIC (Madrid)\ndate: 2025-01-17\nsesion: 4\nformat: \n  revealjs:\n    auto-stretch: false \n    logo: \"images/logo-ugr.png\"\n    footer: Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad\n    theme: [default, \"../../custom_theme.scss\"] \n    transition: fade\n    background-transition: fade\n    highlight-style: a11y\n    code-block-background: true\n    code-link: true\ncrossref:\n  fig-title: Figura     # (default is \"Figure\")\n  tbl-title: Tabla     # (default is \"Table\")\n  title-delim: .     # (default is \":\")\n  fig-prefix: Figura\n  tbl-prefix: Tabla\n  ref-hyperlink: true\n  sec-prefix: \"\"\n  sec-labels: alpha\nexecute:\n  echo: true     \n  eval: true     \n  output: true   \n  include: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n---\n\n![Source: [Julia Lowndes & Allison Horst](https://openscapes.org/blog/2020-10-12-tidy-data/)](images/tidy_intro.jpg){fig-align=\"center\"}\n\n---\n\n![Source: [Wickham & Grolemund](https://r4ds.had.co.nz/tidy-data.html)](images/tidy_data.png){fig-align=\"center\"}\n\n\n# `data.frame` & `tibble`\n\n## `data.frame` \n\n::: small \n- Es la estructura más común para manejar datos tabulares en R\n- Funcionan como una tabla: filas (observaciones) y columnas (variables)\n- Introducidos con el lenguaje base de R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  x = c(1, 2, 3),\n  y = c(\"A\", \"B\", \"C\")\n)\n\ndf \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x y\n1 1 A\n2 2 B\n3 3 C\n```\n\n\n:::\n:::\n\n\n\n::: \n\n--- \n\n## `tibble`\n\n::: small \n\n- Versión mejorada de `data.frame` incluida en el pkg **tibble** (**tidyverse**). \n- Diseñados para ser más consistentes y fáciles de usar.\n- Permite manejar variables *no-sintácticas* (a diferencia de R-base). \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tibble)\ntb <- tibble(\n  x = c(1, 2, 3),\n  y = c(\"A\", \"B\", \"C\"),\n  `x al cuadrado` = x^2\n) \n\ntb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n      x y     `x al cuadrado`\n  <dbl> <chr>           <dbl>\n1     1 A                   1\n2     2 B                   4\n3     3 C                   9\n```\n\n\n:::\n:::\n\n\n:::\n\n--- \n\n\n### Diferencias: impresión de datos \n\n::: small \n- `data.frame`:\n    - Imprimen **todas las filas y columnas** por defecto.\n    - Pueden ser difíciles de leer si el conjunto de datos es grande.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  x y\n1 1 A\n2 2 B\n3 3 C\n```\n\n\n:::\n:::\n\n\n::: \n\n--- \n\n\n### Diferencias: impresión de datos \n\n::: small \n- `tibble`: \n  - Imprimen un **resumen compacto**: muestran las primeras 10 filas y columnas que caben en la consola (se puede modificar, ver [esto](https://es.r4ds.hadley.nz/10-tibble.html#tibbles-vs.-data.frame)). \n  - Formato mas amigable para explorar grandes volúmenes de datos.\n  - Imprimen también la `str()` de los datos\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(tb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n      x y     `x al cuadrado`\n  <dbl> <chr>           <dbl>\n1     1 A                   1\n2     2 B                   4\n3     3 C                   9\n```\n\n\n:::\n:::\n\n\n\n::: \n\n--- \n\n### Diferencias: manejo de tipo de datos\n\n::: small \n- `data.frame`: las columnas de tipo **carácter** se convierten automáticamente a factores, a menos que especifiques `stringsAsFactors = FALSE`.\n\n- `tibble`: nunca convierten caracteres a factores de forma automática.\n\n::: {.panel-tabset}\n### dataframe\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  x = c(1, 2, 3),\n  y = c(\"A\", \"B\", \"C\")\n)\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t3 obs. of  2 variables:\n $ x: num  1 2 3\n $ y: chr  \"A\" \"B\" \"C\"\n```\n\n\n:::\n:::\n\n\n\n### tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntb <- tibble(\n  x = c(1, 2, 3),\n  y = c(\"A\", \"B\", \"C\")\n)\nstr(tb)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [3 × 2] (S3: tbl_df/tbl/data.frame)\n $ x: num [1:3] 1 2 3\n $ y: chr [1:3] \"A\" \"B\" \"C\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: \n\n---\n\n## `data.frame` vs. `tibble`\n\n- **data.frame**: Útiles en scripts básicos o cuando no necesitas integrarte al **tidyverse**.\n- **tibble**: Más consistentes, ideales para trabajar con el **tidyverse** y explorar datos.\n\n\n::: {.callout-note}\n\nPara usar tibble tienes que cargar el paquete [tibble](https://tibble.tidyverse.org/reference/tibble-package.html) que viene por defecto con [tidyverse](https://www.tidyverse.org/packages/) \n\n::: \n\n\n# Generar `tibble`\n\n--- \n\n::: small\n**Transformar `data.frame` a `tibble`**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndft <- as_tibble(df)\ndft\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n      x y    \n  <dbl> <chr>\n1     1 A    \n2     2 B    \n3     3 C    \n```\n\n\n:::\n:::\n\n\n\n::: \n\n--- \n\n::: small\n**Crear `tibble` directamente**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narboles <- tibble(\n  especie = c(\"Pinus halepensis\", \"Quercus ilex\", \"Quercus ilex\", \n              \"Pinus pinaster\", \"Quercus pyrenaica\"),\n  altura_m = c(15, 8, 10, 12, 18),\n  dbh_cm = c(30, 40, 35, 25, 45),\n  site = c(\"plot_A\", \"plot_B\", \"plot_C\", \"plot_A\", \"plot_B\")\n)\n\narboles \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  especie           altura_m dbh_cm site  \n  <chr>                <dbl>  <dbl> <chr> \n1 Pinus halepensis        15     30 plot_A\n2 Quercus ilex             8     40 plot_B\n3 Quercus ilex            10     35 plot_C\n4 Pinus pinaster          12     25 plot_A\n5 Quercus pyrenaica       18     45 plot_B\n```\n\n\n:::\n:::\n\n\n\n:::\n\n--- \n\n::: small\n**Crear `tibble` transpuesto (`t`**`r`**`ibble`)**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narboles <- tribble(\n  ~especie,            ~altura_m, ~dbh_cm, ~site,\n  \"Pinus halepensis\",   15,        30,      \"plot_A\",\n  \"Quercus ilex\",       8,         40,      \"plot_B\",\n  \"Quercus ilex\",       10,        35,      \"plot_C\",\n  \"Pinus pinaster\",     12,        25,      \"plot_A\",\n  \"Quercus pyrenaica\",  18,        45,      \"plot_B\"\n)\narboles \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  especie           altura_m dbh_cm site  \n  <chr>                <dbl>  <dbl> <chr> \n1 Pinus halepensis        15     30 plot_A\n2 Quercus ilex             8     40 plot_B\n3 Quercus ilex            10     35 plot_C\n4 Pinus pinaster          12     25 plot_A\n5 Quercus pyrenaica       18     45 plot_B\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## {footer=false}\n\n::: small \n\n**Crear `tibble` a partir de listas complejas (`enframe`)** \n\n::: {.panel-tabset}\n\n#### Crea tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlista_compleja <- list(\n  numeros = c(1, 2, 3),\n  letras = c(\"A\", \"B\", \"C\"),\n  datos = list(\n    tipo = c(\"x\", \"y\", \"z\"),\n    valores = c(10, 20, 30)\n  )\n)\n\nlc <- enframe(lista_compleja)\nlc \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  name    value           \n  <chr>   <list>          \n1 numeros <dbl [3]>       \n2 letras  <chr [3]>       \n3 datos   <named list [2]>\n```\n\n\n:::\n:::\n\n\n\n#### Acceso a datos\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  name    value           \n  <chr>   <list>          \n1 numeros <dbl [3]>       \n2 letras  <chr [3]>       \n3 datos   <named list [2]>\n```\n\n\n:::\n\n```{.r .cell-code}\nlc[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeros\" \"letras\"  \"datos\"  \n```\n\n\n:::\n\n```{.r .cell-code}\nlc[[2]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 1 2 3\n\n[[2]]\n[1] \"A\" \"B\" \"C\"\n\n[[3]]\n[[3]]$tipo\n[1] \"x\" \"y\" \"z\"\n\n[[3]]$valores\n[1] 10 20 30\n```\n\n\n:::\n:::\n\n\n\n#### Acceso a datos (II)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlc[[2]][1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 1 2 3\n```\n\n\n:::\n\n```{.r .cell-code}\nlc[[2]][2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] \"A\" \"B\" \"C\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlc[[2]][3]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[[1]]$tipo\n[1] \"x\" \"y\" \"z\"\n\n[[1]]$valores\n[1] 10 20 30\n```\n\n\n:::\n\n```{.r .cell-code}\nas.data.frame(lc[[2]][3])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  tipo valores\n1    x      10\n2    y      20\n3    z      30\n```\n\n\n:::\n:::\n\n\n\n:::\n\n:::\n\n## {footer=false}\n\n::: small \n\n**Crear `tibble` a partir de listas complejas (`enframe`) (II)** \n\n::: {.panel-tabset}\n### Datos forestales \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_forestales <- list(\n  parcela_1 = list(\n    especie = c(\"Pinus halepensis\", \"Quercus ilex\"),\n    n_ind = c(10, 5),\n    dbh_cm = c(25, 30)\n  ),\n  parcela_2 = list(\n    especie = c(\"Pinus pinaster\", \"Quercus pyrenaica\"),\n    n_ind = c(15, 8),\n    dbh_cm = c(20, 35)\n  ),\n  parcela_3 = list(\n    especie = c(\"Pinus sylvestris\"),\n    n_ind = c(12),\n    dbh_cm = c(40)\n  )\n)\n```\n:::\n\n\n\n### Crea tibble\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- enframe(datos_forestales, name = \"parcela\", value = \"contenido\")\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  parcela   contenido       \n  <chr>     <list>          \n1 parcela_1 <named list [3]>\n2 parcela_2 <named list [3]>\n3 parcela_3 <named list [3]>\n```\n\n\n:::\n:::\n\n\n\n### Desagregar \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyr)\nd |> \n  unnest_wider(contenido) |> \n  unnest(c(especie, n_ind, dbh_cm)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  parcela   especie           n_ind dbh_cm\n  <chr>     <chr>             <dbl>  <dbl>\n1 parcela_1 Pinus halepensis     10     25\n2 parcela_1 Quercus ilex          5     30\n3 parcela_2 Pinus pinaster       15     20\n4 parcela_2 Quercus pyrenaica     8     35\n5 parcela_3 Pinus sylvestris     12     40\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n::: \n\n# Manipular datos con [tidyverse](https://www.tidyverse.org/)\n\n\n## Explorar datos \n::: small\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n```{.r}\nlibrary(tidyverse)\nd <- read_csv(\"TU_RUTA/ifn_sn_tree.csv\")\n```\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 10\n   plot  aspect slope tree_id specie              dbh height tree_density_factor\n   <chr>  <dbl> <dbl>   <dbl> <chr>             <dbl>  <dbl>               <dbl>\n 1 0792    270     27       1 Pinus halepensis    8.5   3.8                127. \n 2 0792    270     27       2 Pinus halepensis   15.4   4.90                31.8\n 3 0792    330.    40      10 Pinus halepensis   13.4   6.70                31.8\n 4 0792    330.    40      12 Pinus halepensis   13.0   6.90                31.8\n 5 0792    330.    40       1 Quercus ilex ssp…  13     2.40                31.8\n 6 0792    330.    40       2 Quercus ilex ssp…  10.0   2                  127. \n 7 0792    330.    40       3 Quercus ilex ssp…  14.0   2                   31.8\n 8 0792    330.    40       4 Quercus ilex ssp…  13.4   2.60                31.8\n 9 0792    330.    40       5 Quercus ilex ssp…  10.2   2.3                127. \n10 0792    330.    40       6 Quercus ilex ssp…  10.4   2                  127. \n# ℹ 8,776 more rows\n# ℹ 2 more variables: tree_quality_wood <dbl>, prov <chr>\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Explorar datos \n::: small \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 8,786\nColumns: 10\n$ plot                <chr> \"0792\", \"0792\", \"0792\", \"0792\", \"0792\", \"0792\", \"0…\n$ aspect              <dbl> 270.0, 270.0, 330.3, 330.3, 330.3, 330.3, 330.3, 3…\n$ slope               <dbl> 27, 27, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40…\n$ tree_id             <dbl> 1, 2, 10, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 1, 3,…\n$ specie              <chr> \"Pinus halepensis\", \"Pinus halepensis\", \"Pinus hal…\n$ dbh                 <dbl> 8.50, 15.45, 13.40, 12.95, 13.00, 10.05, 14.05, 13…\n$ height              <dbl> 3.8, 4.9, 6.7, 6.9, 2.4, 2.0, 2.0, 2.6, 2.3, 2.0, …\n$ tree_density_factor <dbl> 127.32395, 31.83099, 31.83099, 31.83099, 31.83099,…\n$ tree_quality_wood   <dbl> 2, 2, 2, 2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2,…\n$ prov                <chr> \"Almeria\", \"Almeria\", \"Almeria\", \"Almeria\", \"Almer…\n```\n\n\n:::\n:::\n\n\n:::\n\n## Manipular datos: ordenar \n- Ordena los datos por pendiente \n\n::: small \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  arrange(slope)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 10\n   plot  aspect slope tree_id specie             dbh height tree_density_factor\n   <chr>  <dbl> <dbl>   <dbl> <chr>            <dbl>  <dbl>               <dbl>\n 1 0811    202.   7.5       1 Pinus sylvestris  13.6   6.70                31.8\n 2 0811    202.   7.5       2 Pinus sylvestris  14.6   6.30                31.8\n 3 0811    202.   7.5       3 Pinus sylvestris  15.1   6.20                31.8\n 4 0811    202.   7.5       4 Pinus sylvestris  13.6   5.40                31.8\n 5 0811    202.   7.5       5 Pinus sylvestris  13     6.10                31.8\n 6 0811    202.   7.5       6 Pinus sylvestris  13.8   6.70                31.8\n 7 0811    202.   7.5       7 Pinus sylvestris  14.6   6.40                31.8\n 8 0811    202.   7.5       8 Pinus sylvestris  16.4   6.80                31.8\n 9 0811    202.   7.5       9 Pinus sylvestris  20.5   7.30                31.8\n10 0811    202.   7.5      10 Pinus sylvestris  13.9   5.90                31.8\n# ℹ 8,776 more rows\n# ℹ 2 more variables: tree_quality_wood <dbl>, prov <chr>\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Manipular datos: ordenar \n- Ordena los datos por pendiente decreciente\n\n::: small \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  arrange(desc(slope))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 10\n   plot  aspect slope tree_id specie              dbh height tree_density_factor\n   <chr>  <dbl> <dbl>   <dbl> <chr>             <dbl>  <dbl>               <dbl>\n 1 0792    330.    40      10 Pinus halepensis  13.4    6.70                31.8\n 2 0792    330.    40      12 Pinus halepensis  13.0    6.90                31.8\n 3 0792    330.    40       1 Quercus ilex ssp… 13      2.40                31.8\n 4 0792    330.    40       2 Quercus ilex ssp… 10.0    2                  127. \n 5 0792    330.    40       3 Quercus ilex ssp… 14.0    2                   31.8\n 6 0792    330.    40       4 Quercus ilex ssp… 13.4    2.60                31.8\n 7 0792    330.    40       5 Quercus ilex ssp… 10.2    2.3                127. \n 8 0792    330.    40       6 Quercus ilex ssp… 10.4    2                  127. \n 9 0792    330.    40       7 Quercus ilex ssp… 13      2.10                31.8\n10 0792    330.    40       8 Quercus ilex ssp…  7.75   2                  127. \n# ℹ 8,776 more rows\n# ℹ 2 more variables: tree_quality_wood <dbl>, prov <chr>\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Manipular datos: ordenar \n- Ordena los datos por especie, de mayor a menor (altura)\n\n::: small \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  arrange(specie, desc(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 10\n   plot  aspect slope tree_id specie            dbh height tree_density_factor\n   <chr>  <dbl> <dbl>   <dbl> <chr>           <dbl>  <dbl>               <dbl>\n 1 0924    198     40       2 Acacia spp.      25.6  12.1                 14.1\n 2 0924    198     40       3 Acacia spp.      25.7  NA                   14.1\n 3 1247    161.    40       1 Acer opalus      14.4   9.10                31.8\n 4 1264    194.    40       2 Acer opalus      17.7   7.80                31.8\n 5 1264    194.    40       4 Acer opalus      15.8   7.60                31.8\n 6 1264    194.    40       3 Acer opalus      19.1   6.70                31.8\n 7 1264    194.    40       1 Acer opalus      13.2   6.5                 31.8\n 8 1247    161.    40       2 Acer opalus      12.6   5                   31.8\n 9 0904    167.    16      12 Alnus glutinosa  32.4  16.6                 14.1\n10 0904    167.    16      15 Alnus glutinosa  32.2  15.2                 14.1\n# ℹ 8,776 more rows\n# ℹ 2 more variables: tree_quality_wood <dbl>, prov <chr>\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Manipular datos: organizar columnas\n- Cambiar orden de las columnas \n\n::: small \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  relocate(plot, .after = prov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 10\n   aspect slope tree_id specie                    dbh height tree_density_factor\n    <dbl> <dbl>   <dbl> <chr>                   <dbl>  <dbl>               <dbl>\n 1   270     27       1 Pinus halepensis          8.5   3.8                127. \n 2   270     27       2 Pinus halepensis         15.4   4.90                31.8\n 3   330.    40      10 Pinus halepensis         13.4   6.70                31.8\n 4   330.    40      12 Pinus halepensis         13.0   6.90                31.8\n 5   330.    40       1 Quercus ilex ssp. ball…  13     2.40                31.8\n 6   330.    40       2 Quercus ilex ssp. ball…  10.0   2                  127. \n 7   330.    40       3 Quercus ilex ssp. ball…  14.0   2                   31.8\n 8   330.    40       4 Quercus ilex ssp. ball…  13.4   2.60                31.8\n 9   330.    40       5 Quercus ilex ssp. ball…  10.2   2.3                127. \n10   330.    40       6 Quercus ilex ssp. ball…  10.4   2                  127. \n# ℹ 8,776 more rows\n# ℹ 3 more variables: tree_quality_wood <dbl>, prov <chr>, plot <chr>\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Manipular datos: seleccionar columnas\n::: small \n- Selecciona las especies, su altura y dbh, la calidad de la madera, y el plot al que pertenecen\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  select(plot, specie, dbh, height, tree_quality_wood)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 5\n   plot  specie                      dbh height tree_quality_wood\n   <chr> <chr>                     <dbl>  <dbl>             <dbl>\n 1 0792  Pinus halepensis            8.5   3.8                  2\n 2 0792  Pinus halepensis           15.4   4.90                 2\n 3 0792  Pinus halepensis           13.4   6.70                 2\n 4 0792  Pinus halepensis           13.0   6.90                 2\n 5 0792  Quercus ilex ssp. ballota  13     2.40                 5\n 6 0792  Quercus ilex ssp. ballota  10.0   2                    5\n 7 0792  Quercus ilex ssp. ballota  14.0   2                    5\n 8 0792  Quercus ilex ssp. ballota  13.4   2.60                 5\n 9 0792  Quercus ilex ssp. ballota  10.2   2.3                  5\n10 0792  Quercus ilex ssp. ballota  10.4   2                    5\n# ℹ 8,776 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Manipular datos: seleccionar columnas {footer=false}\n\n::: {.callout-important}\n## Conflicto select\n\n- `select` es una función que aparece en mas de un paquete, por lo que se pueden generar conflictos y/o errores\n\n- cuando la uses escribe `dplyr::select`\n:::\n\n\n::: small \n- Selecciona las especies, su altura y dbh, la calidad de la madera, y el plot al que pertenecen\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd |> \n  dplyr::select(plot, specie, dbh, height, tree_quality_wood)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 5\n   plot  specie                      dbh height tree_quality_wood\n   <chr> <chr>                     <dbl>  <dbl>             <dbl>\n 1 0792  Pinus halepensis            8.5   3.8                  2\n 2 0792  Pinus halepensis           15.4   4.90                 2\n 3 0792  Pinus halepensis           13.4   6.70                 2\n 4 0792  Pinus halepensis           13.0   6.90                 2\n 5 0792  Quercus ilex ssp. ballota  13     2.40                 5\n 6 0792  Quercus ilex ssp. ballota  10.0   2                    5\n 7 0792  Quercus ilex ssp. ballota  14.0   2                    5\n 8 0792  Quercus ilex ssp. ballota  13.4   2.60                 5\n 9 0792  Quercus ilex ssp. ballota  10.2   2.3                  5\n10 0792  Quercus ilex ssp. ballota  10.4   2                    5\n# ℹ 8,776 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Manipular datos: seleccionar columnas {footer=false}\n\n- `select` es una función muy poderosa \n\n::: small \n- Selecciona las especies, su altura y dbh, y el plot al que pertenecen; renombra y recoloca)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos <- d |> \n  dplyr::select(\n    plot, \n    sp = specie, \n    dbh_cm = dbh, \n    altura_m = height,\n    calidad_madera = tree_quality_wood)\n\ndatos\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 5\n   plot  sp                        dbh_cm altura_m calidad_madera\n   <chr> <chr>                      <dbl>    <dbl>          <dbl>\n 1 0792  Pinus halepensis             8.5     3.8               2\n 2 0792  Pinus halepensis            15.4     4.90              2\n 3 0792  Pinus halepensis            13.4     6.70              2\n 4 0792  Pinus halepensis            13.0     6.90              2\n 5 0792  Quercus ilex ssp. ballota   13       2.40              5\n 6 0792  Quercus ilex ssp. ballota   10.0     2                 5\n 7 0792  Quercus ilex ssp. ballota   14.0     2                 5\n 8 0792  Quercus ilex ssp. ballota   13.4     2.60              5\n 9 0792  Quercus ilex ssp. ballota   10.2     2.3               5\n10 0792  Quercus ilex ssp. ballota   10.4     2                 5\n# ℹ 8,776 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Filtrar casos \n\n::: small \n- Selecciona árboles de *Pinus sylvestris*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(sp == \"Pinus sylvestris\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,948 × 5\n   plot  sp               dbh_cm altura_m calidad_madera\n   <chr> <chr>             <dbl>    <dbl>          <dbl>\n 1 0795  Pinus sylvestris   12.6     6.30              2\n 2 0795  Pinus sylvestris   11.2     7.10              2\n 3 0795  Pinus sylvestris   15.6     6.40              2\n 4 0795  Pinus sylvestris   14.9     7.70              2\n 5 0795  Pinus sylvestris   13.4     7                 2\n 6 0795  Pinus sylvestris   13.3     6.30              2\n 7 0795  Pinus sylvestris   19.2     7.5               2\n 8 0795  Pinus sylvestris   15.2     7.60              2\n 9 0795  Pinus sylvestris   17.6     7.40              2\n10 0795  Pinus sylvestris   14.6     7.5               2\n# ℹ 2,938 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Filtrar casos\n\n::: small \n- Selecciona árboles de *Pinus* \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(string = sp, pattern = \"Pinus\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,185 × 5\n   plot  sp               dbh_cm altura_m calidad_madera\n   <chr> <chr>             <dbl>    <dbl>          <dbl>\n 1 0792  Pinus halepensis    8.5     3.8               2\n 2 0792  Pinus halepensis   15.4     4.90              2\n 3 0792  Pinus halepensis   13.4     6.70              2\n 4 0792  Pinus halepensis   13.0     6.90              2\n 5 0795  Pinus sylvestris   12.6     6.30              2\n 6 0795  Pinus sylvestris   11.2     7.10              2\n 7 0795  Pinus sylvestris   15.6     6.40              2\n 8 0795  Pinus sylvestris   14.9     7.70              2\n 9 0795  Pinus sylvestris   13.4     7                 2\n10 0795  Pinus sylvestris   13.3     6.30              2\n# ℹ 7,175 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Filtrar casos\n\n::: small \n- Selecciona árboles adultos (dbh > 7.5) de *Pinus* \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(string = sp, pattern = \"Pinus\")) |> \n  filter(dbh_cm > 7.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,183 × 5\n   plot  sp               dbh_cm altura_m calidad_madera\n   <chr> <chr>             <dbl>    <dbl>          <dbl>\n 1 0792  Pinus halepensis    8.5     3.8               2\n 2 0792  Pinus halepensis   15.4     4.90              2\n 3 0792  Pinus halepensis   13.4     6.70              2\n 4 0792  Pinus halepensis   13.0     6.90              2\n 5 0795  Pinus sylvestris   12.6     6.30              2\n 6 0795  Pinus sylvestris   11.2     7.10              2\n 7 0795  Pinus sylvestris   15.6     6.40              2\n 8 0795  Pinus sylvestris   14.9     7.70              2\n 9 0795  Pinus sylvestris   13.4     7                 2\n10 0795  Pinus sylvestris   13.3     6.30              2\n# ℹ 7,173 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Filtrar casos\n\n::: small \n- Selecciona árboles adultos (dbh > 7.5) de *Pinus* \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(string = sp, pattern = \"Pinus\") & (dbh_cm > 7.5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,183 × 5\n   plot  sp               dbh_cm altura_m calidad_madera\n   <chr> <chr>             <dbl>    <dbl>          <dbl>\n 1 0792  Pinus halepensis    8.5     3.8               2\n 2 0792  Pinus halepensis   15.4     4.90              2\n 3 0792  Pinus halepensis   13.4     6.70              2\n 4 0792  Pinus halepensis   13.0     6.90              2\n 5 0795  Pinus sylvestris   12.6     6.30              2\n 6 0795  Pinus sylvestris   11.2     7.10              2\n 7 0795  Pinus sylvestris   15.6     6.40              2\n 8 0795  Pinus sylvestris   14.9     7.70              2\n 9 0795  Pinus sylvestris   13.4     7                 2\n10 0795  Pinus sylvestris   13.3     6.30              2\n# ℹ 7,173 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Filtrar casos\n\n::: small \n- Selecciona árboles adultos (dbh > 7.5) de *Pinus* con calidad de madera entre 1 y 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(string = sp, pattern = \"Pinus\")) |> \n  filter(dbh_cm > 7.5) |> \n  filter(calidad_madera %in% c(1,2,3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6,926 × 5\n   plot  sp               dbh_cm altura_m calidad_madera\n   <chr> <chr>             <dbl>    <dbl>          <dbl>\n 1 0792  Pinus halepensis    8.5     3.8               2\n 2 0792  Pinus halepensis   15.4     4.90              2\n 3 0792  Pinus halepensis   13.4     6.70              2\n 4 0792  Pinus halepensis   13.0     6.90              2\n 5 0795  Pinus sylvestris   12.6     6.30              2\n 6 0795  Pinus sylvestris   11.2     7.10              2\n 7 0795  Pinus sylvestris   15.6     6.40              2\n 8 0795  Pinus sylvestris   14.9     7.70              2\n 9 0795  Pinus sylvestris   13.4     7                 2\n10 0795  Pinus sylvestris   13.3     6.30              2\n# ℹ 6,916 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Valores únicos \n\n::: small \n- ¿Cuantas parcelas hay? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  distinct(plot) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1   376\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Valores únicos \n\n::: small \n- ¿Cuantas parcelas diferentes hay que tengan tengan adultos (dbh > 7.5) de *Pinus* con calidad de madera entre 1 y 3? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(string = sp, pattern = \"Pinus\")) |> \n  filter(dbh_cm > 7.5) |> \n  filter(calidad_madera %in% c(1,2,3)) |> \n  distinct(plot) |> \n  count()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1   289\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Crear variable \n\n::: small \n- Calcula el área basal de cada indivudo \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  mutate(area_basal = (pi * (dbh_cm/200)^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8,786 × 6\n   plot  sp                        dbh_cm altura_m calidad_madera area_basal\n   <chr> <chr>                      <dbl>    <dbl>          <dbl>      <dbl>\n 1 0792  Pinus halepensis             8.5     3.8               2    0.00567\n 2 0792  Pinus halepensis            15.4     4.90              2    0.0187 \n 3 0792  Pinus halepensis            13.4     6.70              2    0.0141 \n 4 0792  Pinus halepensis            13.0     6.90              2    0.0132 \n 5 0792  Quercus ilex ssp. ballota   13       2.40              5    0.0133 \n 6 0792  Quercus ilex ssp. ballota   10.0     2                 5    0.00793\n 7 0792  Quercus ilex ssp. ballota   14.0     2                 5    0.0155 \n 8 0792  Quercus ilex ssp. ballota   13.4     2.60              5    0.0140 \n 9 0792  Quercus ilex ssp. ballota   10.2     2.3               5    0.00817\n10 0792  Quercus ilex ssp. ballota   10.4     2                 5    0.00841\n# ℹ 8,776 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Crear variable categorica \n\n::: small \n- Crea una variable en función de otra variable \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos_clasificados <- datos |> \n  mutate(cohorte = case_when(\n    dbh_cm <= 2.5 ~ \"recluta\",\n    dbh_cm > 2.5 & dbh_cm <= 7.5 ~ \"juvenile\",\n    dbh_cm > 7.5 ~ \"adulto\"\n  ))\n```\n:::\n\n\n\n::: \n\n## Calcular variables agregadas \n\n::: small \n- Calcula el número de individuos por parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  group_by(plot) |> \n  summarise(n_ind = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 376 × 2\n   plot  n_ind\n   <chr> <int>\n 1 0792     14\n 2 0795     41\n 3 0796      3\n 4 0797     17\n 5 0798     14\n 6 0799     26\n 7 0800      9\n 8 0801     15\n 9 0802      1\n10 0803     71\n# ℹ 366 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Calcular variables agregadas \n\n::: small \n- Calcula el número de individuos de cada especie por parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  group_by(plot, sp) |> \n  summarise(n_ind = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 633 × 3\n# Groups:   plot [376]\n   plot  sp                        n_ind\n   <chr> <chr>                     <int>\n 1 0792  Pinus halepensis              4\n 2 0792  Quercus ilex ssp. ballota    10\n 3 0795  Pinus pinaster                1\n 4 0795  Pinus sylvestris             40\n 5 0796  Pinus nigra                   2\n 6 0796  Quercus ilex ssp. ballota     1\n 7 0797  Pinus pinaster               17\n 8 0798  Quercus ilex ssp. ballota    14\n 9 0799  Pinus nigra                  25\n10 0799  Quercus ilex ssp. ballota     1\n# ℹ 623 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Calcular variables agregadas \n\n::: small \n- Calcula la altura media, min y maxima de cada especie en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  group_by(plot, sp) |> \n  summarise(altura_media = mean(altura_m)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 633 × 3\n# Groups:   plot [376]\n   plot  sp                        altura_media\n   <chr> <chr>                            <dbl>\n 1 0792  Pinus halepensis                  5.57\n 2 0792  Quercus ilex ssp. ballota         2.35\n 3 0795  Pinus pinaster                    6.30\n 4 0795  Pinus sylvestris                 NA   \n 5 0796  Pinus nigra                       7.65\n 6 0796  Quercus ilex ssp. ballota         5   \n 7 0797  Pinus pinaster                   NA   \n 8 0798  Quercus ilex ssp. ballota         5.28\n 9 0799  Pinus nigra                       6.94\n10 0799  Quercus ilex ssp. ballota         5.30\n# ℹ 623 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Calcular variables agregadas \n\n::: small \n- Calcula la altura media y la desviación estándar de cada especie en cada parcela  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  group_by(plot, sp) |> \n  summarise(altura_media = mean(altura_m, na.rm = TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 633 × 3\n# Groups:   plot [376]\n   plot  sp                        altura_media\n   <chr> <chr>                            <dbl>\n 1 0792  Pinus halepensis                  5.57\n 2 0792  Quercus ilex ssp. ballota         2.35\n 3 0795  Pinus pinaster                    6.30\n 4 0795  Pinus sylvestris                  6.74\n 5 0796  Pinus nigra                       7.65\n 6 0796  Quercus ilex ssp. ballota         5   \n 7 0797  Pinus pinaster                    5.53\n 8 0798  Quercus ilex ssp. ballota         5.28\n 9 0799  Pinus nigra                       6.94\n10 0799  Quercus ilex ssp. ballota         5.30\n# ℹ 623 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n## Calcular variables agregadas \n\n::: small \n- Calcula la altura media y la desviación estándar de cada especie en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  group_by(plot, sp) |> \n  summarise(altura_media = mean(altura_m, na.rm = TRUE),\n            altura_sd = sd(altura_m, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 633 × 4\n# Groups:   plot [376]\n   plot  sp                        altura_media altura_sd\n   <chr> <chr>                            <dbl>     <dbl>\n 1 0792  Pinus halepensis                  5.57     1.49 \n 2 0792  Quercus ilex ssp. ballota         2.35     0.582\n 3 0795  Pinus pinaster                    6.30    NA    \n 4 0795  Pinus sylvestris                  6.74     0.628\n 5 0796  Pinus nigra                       7.65     2.62 \n 6 0796  Quercus ilex ssp. ballota         5       NA    \n 7 0797  Pinus pinaster                    5.53     0.911\n 8 0798  Quercus ilex ssp. ballota         5.28     1.48 \n 9 0799  Pinus nigra                       6.94     0.774\n10 0799  Quercus ilex ssp. ballota         5.30    NA    \n# ℹ 623 more rows\n```\n\n\n:::\n:::\n\n\n\n::: \n\n\n## Desagrupar variables \n\n- A menudo es importante desagrupar variables, para garantizar que las operaciones que realizamos a continuación no se vean afectadas por el agrupamiento definido \n\n::: small \n- Calcula la altura media y la desviación estándar de cada especie en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalturas_medias <- datos |> \n  group_by(plot, sp) |> \n  summarise(altura_media = mean(altura_m, na.rm = TRUE),\n            altura_sd = sd(altura_m, na.rm = TRUE)) |> \n  ungroup()\n```\n:::\n\n\n\n::: \n\n## Reestructuración de datos \n\n![Source: [Garrick Aden-Buie’s - Tidyexplained Verbs](https://github.com/gadenbuie/tidyexplain)](images/wider_long){fig-align=\"center\" width=40%}\n\n## Reestructuración de datos \n\n- Calcula la calidad promedio de las diferentes especies de *Pinus* en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(sp, \"Pinus\")) |> \n  group_by(plot, sp) |> \n  summarise(calidad_promedio = mean(calidad_madera, na.rm = TRUE)) |> \n  ungroup() |> \n  pivot_wider(names_from = sp, values_from = calidad_promedio)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 289 × 7\n   plot  `Pinus halepensis` `Pinus pinaster` `Pinus sylvestris` `Pinus nigra`\n   <chr>              <dbl>            <dbl>              <dbl>         <dbl>\n 1 0792                   2            NA                  NA              NA\n 2 0795                  NA             2                   2.2            NA\n 3 0796                  NA            NA                  NA               2\n 4 0797                  NA             2.29               NA              NA\n 5 0799                  NA            NA                  NA               2\n 6 0800                  NA             2                  NA               2\n 7 0801                  NA             2.11               NA               2\n 8 0802                  NA             2                  NA              NA\n 9 0803                  NA             2                  NA              NA\n10 0805                  NA             2.27               NA              NA\n# ℹ 279 more rows\n# ℹ 2 more variables: `Pinus uncinata` <dbl>, `Pinus pinea` <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n## Reestructuración de datos \n\n- Calcula la calidad promedio de las diferentes especies de *Pinus* en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naux <- datos |> \n  filter(str_detect(sp, \"Pinus\")) |> \n  group_by(plot, sp) |> \n  summarise(calidad_promedio = mean(calidad_madera, na.rm = TRUE)) |> \n  ungroup() \naux \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 409 × 3\n   plot  sp               calidad_promedio\n   <chr> <chr>                       <dbl>\n 1 0792  Pinus halepensis             2   \n 2 0795  Pinus pinaster               2   \n 3 0795  Pinus sylvestris             2.2 \n 4 0796  Pinus nigra                  2   \n 5 0797  Pinus pinaster               2.29\n 6 0799  Pinus nigra                  2   \n 7 0800  Pinus nigra                  2   \n 8 0800  Pinus pinaster               2   \n 9 0801  Pinus nigra                  2   \n10 0801  Pinus pinaster               2.11\n# ℹ 399 more rows\n```\n\n\n:::\n:::\n\n\n\n## Reestructuración de datos \n\n- Calcula la calidad promedio de las diferentes especies de *Pinus* en cada parcela \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naux |> \n  pivot_wider(names_from = sp, values_from = calidad_promedio)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 289 × 7\n   plot  `Pinus halepensis` `Pinus pinaster` `Pinus sylvestris` `Pinus nigra`\n   <chr>              <dbl>            <dbl>              <dbl>         <dbl>\n 1 0792                   2            NA                  NA              NA\n 2 0795                  NA             2                   2.2            NA\n 3 0796                  NA            NA                  NA               2\n 4 0797                  NA             2.29               NA              NA\n 5 0799                  NA            NA                  NA               2\n 6 0800                  NA             2                  NA               2\n 7 0801                  NA             2.11               NA               2\n 8 0802                  NA             2                  NA              NA\n 9 0803                  NA             2                  NA              NA\n10 0805                  NA             2.27               NA              NA\n# ℹ 279 more rows\n# ℹ 2 more variables: `Pinus uncinata` <dbl>, `Pinus pinea` <dbl>\n```\n\n\n:::\n:::\n\n\n\n## Reestructuración de datos {footer=false}\n::: small\n- Representa en un gráfico la altura y diámetro medio de las diferentes especies de pinos \n::: \n\n\n::: {.cell}\n::: {.cell-output-display}\n![](tidy_data_files/figure-revealjs/unnamed-chunk-45-1.png){width=960}\n:::\n:::\n\n\n\n## Reestructuración de datos {footer=false}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatos |> \n  filter(str_detect(sp, \"Pinus\")) |> \n  pivot_longer(\n    cols = c(dbh_cm, altura_m),     \n    names_to = \"variable\",           \n    values_to = \"valor\"            \n  ) |> ggplot(\n    aes(x = sp, y = valor, fill = sp)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") + \n  theme_minimal() +                                \n  labs(\n    title = \"Diámetro y Altura para Especies de Pinus\",\n    x = \"Especies de Pinus\",\n    y = \"Valor\",\n    fill = \"Especie\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  facet_wrap(~ variable, scales = \"free_y\") \n```\n:::\n\n\n\n\n## ¿Alguna duda? \n\n- {{< fa brands bluesky >}} [ajpelu.bsky.social](https://bsky.app/profile/ajpelu.bsky.social)\n\n\n- [antonio.perez@inia.csic.es](mailto: antonio.perez@inia.csic.es)\n\n\n<small>Ayuda JDC2022-050056-I financiada por MCIN/AEI /10.13039/501100011033 y por la Unión Europea NextGenerationEU/PRTR</small>\n\n![](images/logo-jdc.png){fig-align=\"center\" width=40%}\n\n\n::: {.callout-tip}\n## Si usas esta presentación puedes citarla como:\n<small>**Pérez-Luque, A.J. **(2025). Tidy data. Material Docente de la Asignatura: Ciclo de Gestión de los Datos. Master Universitario en Conservación, Gestión y Restauración de la Biodiversidad. Universidad de Granada. [https://ecoinfugr.github.io/ecoinformatica/](https://ecoinfugr.github.io/ecoinformatica/) </small>\n:::\n",
    "supporting": [
      "tidy_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}