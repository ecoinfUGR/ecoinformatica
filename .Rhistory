h <- read.csv("assets/horarios_24_25.csv")
names(h)
head(h)
library(tidyverse)
h <- read.csv("assets/horarios_24_25.csv") |>
unite("time", c("time_start", "time_end"), sep = "-")
h
library(tidyverse)
h <- read.csv("assets/horarios_24_25.csv") |>
unite("time", c("time_start", "time_end"), sep = "-")
library(tidyverse)
h <- read.csv("assets/horarios_24_25.csv") |>
unite("time", c("time_start", "time_end"), sep = "-") |>
dplyr::select(date, time, site)
#| echo: false
h |>
kbl() |>
kable_styling()
library(kableExtra)
#| echo: false
h |>
kbl() |>
kable_styling()
library(toastui)
cal_demo_props()
cal_demo_props
cal_demo_data
cal_demo_data()
names(cal_demo_data)
names(cal_demo_data())
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
h <- read.csv("assets/horarios_24_25.csv") |>
unite("time", c("time_start", "time_end"), sep = "-") |>
dplyr::select(date, time, site)
h
library(tidyverse)
library(kableExtra)
h <- read.csv("assets/horarios_24_25.csv")
head(h)
?as_datetime
h$time_start
j <- h |>
mutate(s = paste(time_start, "00", ":"))
j
j <- h |>
mutate(s = paste(time_start, "00", sep = ":"))
j
j <- h |>
mutate(start =
as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")))
j
str(j)
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
j
h <- read_csv("assets/horarios_24_25.csv")
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
h
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
h <- read.csv("assets/horarios_24_25.csv", na.strings = "")
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
j
h <- read_csv("assets/horarios_24_25.csv", na.strings = "")
h <- read_csv("assets/horarios_24_25.csv")
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
?read_csv
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE, col_types = "dc")
h
str(h)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
str(h)
as_datetime()
?as_datetime
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")))
j
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")))
j
head(j)
cal_demo_data()
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = NULL,
category = "time",
backgroundColor = NULL,
color = NULL,
borderColor = NULL) |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
calendar(j)
calendar(j, view = "month", navigation = TRUE)
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
library(toastui)
calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
?calendar
?cal_schedules
# Add schedules data
ex_data <- cal_demo_data()
calendar(ex_data)
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format(Sys.Date(), "%Y-%m-03"),
end = format(Sys.Date(), "%Y-%m-04"),
category = "allday"
)
j
tail(j)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format("2025-01-07", "%Y-%m-%d"),
end = format("2025-04-25", "%Y-%m-%d"),
category = "allday"
)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format("2025-01-07", "%Y-%m-%3"),
end = format("2025-04-25", "%Y-%m-%4"),
category = "allday"
)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = as.Date("2025-01-07", "%Y-%m-%3"),
end = as.Date("2025-04-25", "%Y-%m-%4"),
category = "allday"
)
h
?calendar
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
startDayOfWeek = 1
)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
startDayOfWeek = 2
)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
workweek = TRUE
)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
o
cal_month_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
o <- calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE)
cal_month_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
cal_week_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-01"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
?calendar
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
library(toastui)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=16, hourEnd=21,
showNowIndicator = TRUE)
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
h |>
kbl() |>
kable_styling()
toastui::calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
toastui::calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
?as_datetime
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz = "UTC"),
end = as_datetime(paste(date, time_end, sep = " "),tz = "UTC"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz = "UTC+2"),
end = as_datetime(paste(date, time_end, sep = " "),tz = "UTC+2"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
?as_datetime
?timezone
?lubridate::timezone
?lubridate::timezones
?lubridate::timezone
?lubridate::tz
Sys.timezone()
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
