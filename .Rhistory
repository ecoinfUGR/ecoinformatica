library(DBI)
library(tidyverse)
library(RSQLite)
library(dbplyr)
# Load the sample data
data("population")
data("who")
# Create database
con <- dbConnect(drv = RSQLite::SQLite(),
dbname = ":memory:")
# store sample data in database
dbWriteTable(conn = con,
name = "population",
value = population)
dbWriteTable(conn = con,
name = "who",
value = who)
```{sql, connection = con}
```{sql, connection = con}
```{sql, connection = con, output.var = "M1_results"}
# install.packages("odbc")
# install.packages("DBI")
# install.packages("tidyverse")
# install.packages("RSQLite")
# install.packages("dbplyr")
# library(odbc)
library(DBI)
library(tidyverse)
library(RSQLite)
library(dbplyr)
# Load the sample data
data("population")
data("who")
# Create database
con <- dbConnect(drv = RSQLite::SQLite(),
dbname = ":memory:")
# store sample data in database
dbWriteTable(conn = con,
name = "population",
value = population)
dbWriteTable(conn = con,
name = "who",
value = who)
# install.packages("odbc")
# install.packages("DBI")
# install.packages("tidyverse")
# install.packages("RSQLite")
# install.packages("dbplyr")
# library(odbc)
library(DBI)
library(tidyverse)
library(RSQLite)
library(dbplyr)
# Load the sample data
data("population")
data("who")
# Create database
con <- dbConnect(drv = RSQLite::SQLite(),
dbname = ":memory:")
# store sample data in database
dbWriteTable(conn = con,
name = "population",
value = population)
dbWriteTable(conn = con,
name = "who",
value = who)
knitr::opts_chunk$set(connection = "con")
# install.packages("odbc")
# install.packages("DBI")
# install.packages("tidyverse")
# install.packages("RSQLite")
# install.packages("dbplyr")
# library(odbc)
library(DBI)
# library(tidyverse)
# library(RSQLite)
# library(dbplyr)
# Load the sample data
data("population")
data("who")
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
knitr::opts_chunk$set(connection = "con")
# Create database
# con <- dbConnect(drv = RSQLite::SQLite(), dbname = ":memory:")
# store sample data in database
# dbWriteTable(conn = con,
#              name = "population",
#              value = population)
# dbWriteTable(conn = con,
#              name = "who",
#              value = who)
knitr::opts_chunk$set(connection = "con")
View(con)
# library(odbc)
# library(DBI)
# library(tidyverse)
library(RSQLite)
library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
con
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
dbFetch(res)
# library(odbc)
# library(tidyverse)
library(RSQLite)
library(DBI)
# Load the sample data
data("population")
data("who")
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
# dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
dbFetch(res)
dbClearResult(res)
# Disconnect from the database
dbDisconnect(con)
dbWriteTable(con, "mtcars", mtcars)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
dbWriteTable(con, "mtcars", mtcars)
# Disconnect from the database
dbDisconnect(con)
# Or a chunk at a time
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while (!dbHasCompleted(res)) {
chunk <- dbFetch(res, n = 5)
print(nrow(chunk))
}
library(RSQLite)
library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
# dbWriteTable(con, "mtcars", mtcars)
dbListTables(con)
dbListFields(con, "mtcars")
dbReadTable(con, "mtcars")
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
dbFetch(res)
dbClearResult(res)
# Disconnect from the database
dbDisconnect(con)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt")
View(tabla1)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";")
View(tabla1)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
View(tabla1)
tabla2 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
View(tabla2)
# dbWriteTable(con, "mtcars", mtcars)
dbWriteTable(con, "tabla1", tabla1)
dbWriteTable(con, "tabla2", tabla2)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
# dbWriteTable(con, "mtcars", mtcars)
dbWriteTable(con, "tabla1", tabla1)
dbWriteTable(con, "tabla2", tabla2)
dbListTables(con)
dbListFields(con, "tabla1")
dbReadTable(con, "tabla1")
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Cla = A")
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Cla = A")
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Cla = "A"")
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
dbFetch(res)
dbClearResult(res)
# Disconnect from the database
dbDisconnect(con)
dbListTables(con)
library(RSQLite)
library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
library(RSQLite)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
con
library(RSQLite)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
tabla2 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
# dbWriteTable(con, "mtcars", mtcars)
dbWriteTable(con, "tabla1", tabla1)
dbWriteTable(con, "tabla2", tabla2)
dbListTables(con)
dbListFields(con, "tabla1")
dbReadTable(con, "tabla1")
dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
dbFetch(res)
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
dbFetch(res)
dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
dbFetch(res)
View(res)
df <- dbFetch(res)
View(df)
dbClearResult(res)
res <- dbSendQuery(con, "SELECT * FROM tabla1 WHERE Dn1 = 84")
df <- dbFetch(res)
View(df)
dbClearResult(res)
View(tabla1)
results <- tbl(src = con, "tabla2") %>%
left_join(y = tbl(src = con, "tabla1"),
by = c("Estadillo", "Cla", "Subclase"))
library(dplyr)
results <- tbl(src = con, "tabla2") %>%
left_join(y = tbl(src = con, "tabla1"),
by = c("Estadillo", "Cla", "Subclase"))
View(results)
results <- tabla2 %>%
left_join(tabla1,
by = c("Estadillo", "Cla", "Subclase"))
results <- tabla2 %>%
left_join(tabla1,
by = c("Estadillo" = "Estadillo", "Cla" ) "Cla", "Subclase" = "Subclase"))
results <- tabla2 %>%
left_join(tabla1,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
results <- tabla2
results <- tabla1
results <- tabla1 %>%
left_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
View(results)
View(tabla2)
View(tabla1)
# Chunk 1: setup
library(RSQLite)
library(dplyr)
# library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
tabla2 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
# dbWriteTable(con, "mtcars", mtcars)
dbWriteTable(con, "tabla1", tabla1)
library(RSQLite)
library(dplyr)
# library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
tabla2 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
# dbWriteTable(con, "mtcars", mtcars)
dbWriteTable(con, "tabla1", tabla1)
library(RSQLite)
library(dplyr)
# library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
tabla1 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
tabla2 <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
dbWriteTable(con, "tabla1", tabla1)
dbWriteTable(con, "tabla2", tabla2)
dbListTables(con)
dbListFields(con, "tabla1")
dbReadTable(con, "tabla1")
res <- dbSendQuery(con, "SELECT * FROM tabla2 WHERE Dn1 = 84")
df <- dbFetch(res)
# dbClearResult(res)
View(df)
results <- tabla1 %>%
left_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
View(results)
results <- tabla1 %>%
full_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
View(results)
results <- tabla1 %>%
dplyr::select(Estadillo, Cla, Subclase, CoorX, Coory, FccArb, FCCTot) %>%
full_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
results <- tabla1 %>%
dplyr::select(Estadillo, Cla, Subclase, CoorX, Coory, FccArb, FCCTot) %>%
full_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
results <- tabla1 %>%
dplyr::select(Estadillo, Cla, Subclase, CoorX, Coory, FccArb, FccTot) %>%
full_join(tabla2,
by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
View(results)
library(RSQLite)
library(dplyr)
# library(DBI)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
parcelas <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
mayores <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMayores.txt", sep = ";", header = TRUE)
matorral <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCMatorral.txt", sep = ";", header = TRUE)
regenera <- read.table("~/Documents/Mapas/IFN3/Tablas_exportadas/ifn3p04_Convertida_Tabla_PCRegenera.txt", sep = ";", header = TRUE)
dbWriteTable(con, "parcelas", parcelas)
dbWriteTable(con, "mayores", mayores)
dbWriteTable(con, "matorral", matorral)
dbWriteTable(con, "regenera", regenera)
dbListTables(con)
dbListFields(con, "parcelas")
dbReadTable(con, "parcelas")
query_1 <- dbSendQuery(con, "SELECT * FROM mayores WHERE Dn1 = 84")
df <- dbFetch(query_1)
# dbClearResult(res)
View(df)
# install.packages("RSQLite")
library(RSQLite)
# install.packages("dplyr")
library(dplyr)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
parcelas <- read.table("../material/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
parcelas <- read.table("./material/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
getwd()
path <- "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/ecoinformatica_web/sesiones/bbdd/"
parcelas <- read.table("material/ifn3p18_Convertida_Tabla_PCParcelas.txt", sep = ";", header = TRUE)
parcelas <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCParcelas.txt"), sep = ";", header = TRUE)
path <- "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/ecoinformatica_web/sesiones/bbdd/"
parcelas <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCParcelas.txt"), sep = ";", header = TRUE)
mayores <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMayores.txt"), sep = ";", header = TRUE)
matorral <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMatorral.txt"), sep = ";", header = TRUE)
regenera <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCRegenera.txt"), sep = ";", header = TRUE)
View(matorral)
View(mayores)
View(parcelas)
View(regenera)
dbWriteTable(con, "parcelas", parcelas)
dbWriteTable(con, "mayores", mayores)
dbWriteTable(con, "matorral", matorral)
dbWriteTable(con, "regenera", regenera)
dbListTables(con)
dbListFields(con, "parcelas")
dbReadTable(con, "parcelas")
dbListTables(con)
# install.packages("RSQLite")
library(RSQLite)
# install.packages("dplyr")
library(dplyr)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
path <- "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/ecoinformatica_web/sesiones/bbdd/"
parcelas <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCParcelas.txt"), sep = ";", header = TRUE)
mayores <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMayores.txt"), sep = ";", header = TRUE)
matorral <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMatorral.txt"), sep = ";", header = TRUE)
regenera <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCRegenera.txt"), sep = ";", header = TRUE)
dbWriteTable(con, "parcelas", parcelas)
dbWriteTable(con, "mayores", mayores)
dbWriteTable(con, "matorral", matorral)
dbWriteTable(con, "regenera", regenera)
dbListTables(con)
dbListFields(con, "parcelas")
dbReadTable(con, "parcelas")
dbListTables(con)
query_1 <- dbSendQuery(con, "SELECT * FROM mayores WHERE Dn1 = 84")
df_q1 <- dbFetch(query_1)
dbClearResult(df_q1)
dbClearResult(query_1)
View(df_q1)
query_1 <- dbSendQuery(con, "SELECT * FROM mayores WHERE Dn1 > 84")
df_q1 <- dbFetch(query_1)
View(df_q1)
dbClearResult(query_1)
query_1 <- dbSendQuery(con, "SELECT Estadillo, Especie FROM mayores WHERE Dn1 > 84")
df_q1 <- dbFetch(query_1)
dbClearResult(query_1)
View(df_q1)
query_1 <- dbSendQuery(con, "SELECT Estadillo, Especie, Dn1 FROM mayores WHERE Dn1 > 84")
df_q1 <- dbFetch(query_1)
```{r}
query_1 <- dbSendQuery(con, "SELECT Estadillo, Especie, Dn1 FROM mayores WHERE Dn1 > 84")
dbClearResult(query_1)
```{r}
# Chunk 1: setup
# install.packages("RSQLite")
library(RSQLite)
# install.packages("dplyr")
library(dplyr)
# Chunk 2
con = dbConnect(RSQLite::SQLite(), dbname = "sql.sqlite")
dbListTables(con)
# Chunk 3
path <- "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/ecoinformatica_web/sesiones/bbdd/"
parcelas <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCParcelas.txt"), sep = ";", header = TRUE)
mayores <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMayores.txt"), sep = ";", header = TRUE)
matorral <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCMatorral.txt"), sep = ";", header = TRUE)
regenera <- read.table(paste0(path, "material/ifn3p18_Convertida_Tabla_PCRegenera.txt"), sep = ";", header = TRUE)
dbWriteTable(con, "parcelas", parcelas)
dbListTables(con)
query_1 <- dbSendQuery(con, "SELECT Estadillo, Especie, Dn1 FROM mayores WHERE Dn1 > 84")
df_q1 <- dbFetch(query_1)
View(df_q1)
query_2 <- dbSendQuery(con, "SELECT AVG(Dn1, Dn2)
FROM mayores;")
query_2 <- dbSendQuery(con, "SELECT (Dn1 + Dn2/2))
FROM mayores;")
query_2 <- dbSendQuery(con, "SELECT (Dn1 + Dn2/2)
FROM mayores;")
df_q2 <- dbFetch(query_2)
View(df_q2)
query_2 <- dbSendQuery(con, "SELECT (Dn1 + Dn2/2) AS Dn_avg
FROM mayores;")
df_q2 <- dbFetch(query_2)
View(df_q2)
query_2 <- dbSendQuery(con, "SELECT Estadillo, Especie, (Dn1 + Dn2/2) AS Dn_avg
FROM mayores;")
df_q2 <- dbFetch(query_2)
query_2 <- dbSendQuery(con, "SELECT Estadillo, Especie, (Dn1 + Dn2/2) AS Dn_avg
FROM mayores
WHERE Especie = 24;")
df_q2 <- dbFetch(query_2)
View(df_q2)
query_2 <- dbSendQuery(con, "SELECT Estadillo, (Dn1 + Dn2/2) AS Dn_avg
FROM mayores
WHERE Especie = 24;")
df_q2 <- dbFetch(query_2)
View(df_q2)
arboles <- read.table(paste0(path, "material/especies_ANEXO12.txt"), sep = ";", header = TRUE)
arbustos <- read.table(paste0(path, "material/especies_ANEXO13.txt"), sep = ";", header = TRUE)
# dbWriteTable(con, "parcelas", parcelas)
# dbWriteTable(con, "mayores", mayores)
# dbWriteTable(con, "matorral", matorral)
# dbWriteTable(con, "regenera", regenera)
dbWriteTable(con, "arboles", arboles)
dbWriteTable(con, "arbustos", arbustos)
dbListTables(con)
acompanantes <- mayores %>%
left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
acompanantes <- mayores %>%
left_join(arboles)
acompanantes <- mayores %>%
left_join(arbolesby = c("Especie" = "Codigo"))
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo"))
View(acompanantes)
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.Y = "Quercus ilex")
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.Y == "Quercus ilex")
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex")
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase)
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
distinct()
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase)
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
distinct()
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
distinct() %>%
left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase"))
View(acompanantes)
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
distinct() %>%
left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase")) %>%
select(-Fcc, -Hm) %>%
left_join(arbustos, by = c("Especie" = "Codigo"))
View(acompanantes)
acompanantes <- mayores %>%
left_join(arboles, by = c("Especie" = "Codigo")) %>%
filter(Especie.y == "Quercus ilex") %>%
select(Estadillo, Cla, Subclase) %>%
distinct() %>%
left_join(matorral, by = c("Estadillo" = "Estadillo", "Cla" = "Cla", "Subclase" = "Subclase")) %>%
select(-Fcc, -Hm) %>%
left_join(arbustos, by = c("Especie" = "Codigo")) %>%
rename(Codigo = Especie, Especie = Especie.y)
View(acompanantes)
dbDisconnect(con)
