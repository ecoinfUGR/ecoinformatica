j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
j
h <- read_csv("assets/horarios_24_25.csv", na.strings = "")
h <- read_csv("assets/horarios_24_25.csv")
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
?read_csv
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
j <- h |>
mutate(start = as_datetime(paste(date, paste(time_start, "00", sep = ":"), sep = " ")),
end = as_datetime(paste(date, paste(time_end, "00", sep = ":"), sep = " ")))
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE, col_types = "dc")
h
str(h)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
str(h)
as_datetime()
?as_datetime
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")))
j
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")))
j
head(j)
cal_demo_data()
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = NULL,
category = "time",
backgroundColor = NULL,
color = NULL,
borderColor = NULL) |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
calendar(j)
calendar(j, view = "month", navigation = TRUE)
j <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Econinformática",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
library(toastui)
calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
?calendar
?cal_schedules
# Add schedules data
ex_data <- cal_demo_data()
calendar(ex_data)
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format(Sys.Date(), "%Y-%m-03"),
end = format(Sys.Date(), "%Y-%m-04"),
category = "allday"
)
j
tail(j)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format("2025-01-07", "%Y-%m-%d"),
end = format("2025-04-25", "%Y-%m-%d"),
category = "allday"
)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = format("2025-01-07", "%Y-%m-%3"),
end = format("2025-04-25", "%Y-%m-%4"),
category = "allday"
)
library(toastui)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
calendar(useDetailPopup = TRUE) %>%
cal_schedules(
title = "My schedule",
body = "Some detail about it",
start = as.Date("2025-01-07", "%Y-%m-%3"),
end = as.Date("2025-04-25", "%Y-%m-%4"),
category = "allday"
)
h
?calendar
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
startDayOfWeek = 1
)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
startDayOfWeek = 2
)
calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE) |>
cal_month_options(
workweek = TRUE
)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
o
cal_month_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
o <- calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE)
cal_month_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE)
cal_week_options(cal = o,
workweek = FALSE,
startDayOfWeek = 1)
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-01"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1)
?calendar
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
library(toastui)
o <- calendar(j, view = "week",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=16, hourEnd=21,
showNowIndicator = TRUE)
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " ")),
end = as_datetime(paste(date, time_end, sep = " ")),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
h |>
kbl() |>
kable_styling()
toastui::calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
cal_week_options(cal = o,
workweek = TRUE,
startDayOfWeek = 1,
hourStart=8, hourEnd=21,
showNowIndicator = TRUE)
toastui::calendar(j, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06"))
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
?as_datetime
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz = "UTC"),
end = as_datetime(paste(date, time_end, sep = " "),tz = "UTC"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz = "UTC+2"),
end = as_datetime(paste(date, time_end, sep = " "),tz = "UTC+2"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
?as_datetime
?timezone
?lubridate::timezone
?lubridate::timezones
?lubridate::timezone
?lubridate::tz
Sys.timezone()
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date, time_start, sep = " "),tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesion", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date,  time_start, sep = " "), tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesión", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
d
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date,  time_start, sep = " "), tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesión", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
toastui::calendar(d, view = "month",
navigation = TRUE,
isReadOnly = TRUE,
defaultDate=as.Date("2025-01-06")) |>
cal_month_options(
startDayOfWeek = 1)
# cal_week_options(cal = o,
#                   workweek = TRUE,
#                   startDayOfWeek = 1,
#                  hourStart=8, hourEnd=21,
#                  showNowIndicator = TRUE)
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(toastui)
h <- read_csv("assets/horarios_24_25.csv", show_col_types = FALSE)
d <- h |>
mutate(start = as_datetime(paste(date,  time_start, sep = " "), tz="Europe/Madrid"),
end = as_datetime(paste(date, time_end, sep = " "),tz="Europe/Madrid"),
calendarId = 1,
title = "Clase Ciclo Gestión de Datos",
body = paste("Sesión", sesion, " "),
recurrenceRule = '',
category = "time",
backgroundColor = '#5e7a97',
color = '',
borderColor = '') |>
dplyr::select(
calendarId, title, body, recurrenceRule, start, end, category, location = site,
backgroundColor, color, borderColor
)
#| echo: false
#| eval: false
h |>
kbl() |>
kable_styling()
#| echo: false
#| eval: false
h |>
kbl() |>
kable_styling()
library(dplyr)
library(terra)
area <- terra::vect("/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/area_trabajo_23030.shp")
area_ampliada <- terra::vect("/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/area_trabajo_ampliada_23030.shp")
# Recortar profundidad de suelos
prof <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/Propiedades_Suelos_Andalucia/Profundidad del Suelo/prof_clases/prof_clases.adf")
prof
prof_23030 <- project(prof, "epsg:23030")
prof_23030_cropped <- crop(prof_23030, area_ampliada)
writeRaster(prof_23030_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/prof_suelos.adf", overwrite = TRUE)
writeRaster(prof_23030_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/prof_suelos.asc", overwrite = TRUE)
writeRaster(prof_23030_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/prof_suelos.tif", overwrite = TRUE)
writeRaster(prof_23030_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/prof_suelos.tif", overwrite = TRUE)
# Recortar temperaturas
temp_max <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/02_TEMPERATURA/01_TEMPERATURA/01_MEDIA/01_ANUAL/TEMP_MAXIMA_ANUAL_1971_2000_V2008/tmax_1971_2000.tif")
library(dplyr)
library(terra)
area <- terra::vect("/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/area_trabajo_23030.shp")
area_ampliada <- terra::vect("/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/area_trabajo_ampliada_23030.shp")
# Recortar temperaturas
temp_max <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/02_TEMPERATURA/01_TEMPERATURA/01_MEDIA/01_ANUAL/TEMP_MAXIMA_ANUAL_1971_2000_V2008/tmax_1971_2000.tif")
temp_max
temp_min <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/02_TEMPERATURA/01_TEMPERATURA/01_MEDIA/01_ANUAL/TEMP_MINIMA_ANUAL_1971_2000_V2008/tmin_1971_2000.tif")
temp_min
area_3042 <- project(area_ampliada, "epsg:3042")
temp_min_cropped <- crop(temp_min, area_3042)
temp_max_cropped <- crop(temp_max, area_3042)
writeRaster(temp_max_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/temp_max_3042.tif", overwrite = TRUE)
writeRaster(temp_min_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/temp_min_3042.tif", overwrite = TRUE)
prec <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/03_PRECIPITACION/01_PRECIPITACION/01_MEDIA/01_ANUAL/PRECIP_MEDIA_ANUAL/p_1971_2000.tif")
prec
prec_cropped <- crop(prec, area_3042)
# Recortar temperaturas y precipitación
temp_max <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/02_TEMPERATURA/01_TEMPERATURA/01_MEDIA/01_ANUAL/TEMP_MAXIMA_ANUAL_1971_2000_V2008/tmax_1971_2000.tif")
temp_min <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/02_TEMPERATURA/01_TEMPERATURA/01_MEDIA/01_ANUAL/TEMP_MINIMA_ANUAL_1971_2000_V2008/tmin_1971_2000.tif")
prec <- terra::rast("/Users/maria.suarez.munoz/Documents/Mapas/02_CARACTERIZACION_CLIMATICA_REDIAM/03_PRECIPITACION/01_PRECIPITACION/01_MEDIA/01_ANUAL/PRECIP_MEDIA_ANUAL/p_1971_2000.tif")
area_3042 <- project(area_ampliada, "epsg:3042")
temp_min_cropped <- crop(temp_min, area_3042)
temp_max_cropped <- crop(temp_max, area_3042)
prec_cropped <- crop(prec, area_3042)
writeRaster(temp_min_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/tmin_1971_2000_3042.tif", overwrite = TRUE)
writeRaster(temp_max_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/tmax_1971_2000_3042.tif", overwrite = TRUE)
writeRaster(prec_cropped, filename = "/Users/maria.suarez.munoz/Library/CloudStorage/GoogleDrive-msuamun@go.ugr.es/My Drive/Docencia/Ecoinformatica_UGR/2024_2025/materiales/data/p_1971_2000_3042.tif", overwrite = TRUE)
Archivo texto + archivo vectorial (Joins)
